(window.webpackJsonp=window.webpackJsonp||[]).push([[1],{1039:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('\n// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(242);\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(243);\n\n// EXTERNAL MODULE: ./shared/account/profileUtil.ts\nvar profileUtil = __webpack_require__(267);\n\n// CONCATENATED MODULE: ./shared/util/grid.ts\n/*\n  Grid helper for CS lists\n  Note: we\'re using hardcoded offset between each item in the lists, to avoid that we need to\n  implement % grid, which should solve this problem in easier way.\n*/\nfunction calculateColumnWidth(columnsPerRow) {\n    var maxFixedPoint = 5;\n    return "".concat((100 / columnsPerRow).toFixed(maxFixedPoint), "%");\n}\n\n// EXTERNAL MODULE: ./shared/list/listId.ts\nvar listId = __webpack_require__(304);\n\n// EXTERNAL MODULE: ./crave/tv/component/Asset.tsx + 1 modules\nvar Asset = __webpack_require__(298);\n\n// CONCATENATED MODULE: ./bell/tv/pageEntry/continuous/ContinuousScrollListRow.tsx\n\n\n\n\n\n\nfunction checkWatchedPosition(watchedList) {\n    if (!watchedList)\n        return;\n    return Object.values(watchedList).reduce(function (acc, value) { return (acc += value.position + \'-\'); }, \'\');\n}\nfunction checksum(items) {\n    return items.reduce(function (acc, item) { return (acc += item.id + \'-\'); }, \'\');\n}\nfunction hasSelection(props) {\n    var selectedIndex = props.selectedIndex, offset = props.offset, items = props.items;\n    return selectedIndex >= offset && selectedIndex - offset < items.length;\n}\nvar ContinuousScrollListRow_ContinuousScrollListRow = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(ContinuousScrollListRow, _super);\n    function ContinuousScrollListRow() {\n        return _super !== null && _super.apply(this, arguments) || this;\n    }\n    ContinuousScrollListRow.prototype.shouldComponentUpdate = function (nextProps) {\n        var _a = this.props, isFocused = _a.isFocused, selectedIndex = _a.selectedIndex, items = _a.items, watchedList = _a.watchedList;\n        var nextSelection = hasSelection(nextProps);\n        // re-render only when:\n        // - grid focus changed\n        // - selectedIndex changed within the row\n        // - (some) items changed\n        return (nextProps.isFocused !== isFocused ||\n            (nextSelection && nextProps.selectedIndex !== selectedIndex) ||\n            nextSelection !== this.hasSelection ||\n            (nextProps.items !== items && checksum(nextProps.items) !== this.checksum) ||\n            (nextProps.watchedList !== watchedList &&\n                checkWatchedPosition(nextProps.watchedList) !== this.checkWatchedPosition));\n    };\n    ContinuousScrollListRow.prototype.componentDidUpdate = function () {\n        this.hasSelection = hasSelection(this.props);\n        this.checksum = checksum(this.props.items);\n        this.checkWatchedPosition = checkWatchedPosition(this.props.watchedList);\n    };\n    ContinuousScrollListRow.prototype.getItemWatchedPosition = function (item) {\n        var _a;\n        var isEpisodesListPage = this.props.isEpisodesListPage;\n        if (isEpisodesListPage) {\n            var watched = Object(profileUtil["t" /* getWatchedInfo */])(item.customId);\n            var position = (_a = watched === null || watched === void 0 ? void 0 : watched.value) === null || _a === void 0 ? void 0 : _a.position;\n            return position;\n        }\n        return item.watchedPosition;\n    };\n    ContinuousScrollListRow.prototype.render = function () {\n        var _this = this;\n        var _a = this.props, list = _a.list, items = _a.items, height = _a.height, offset = _a.offset, isFocused = _a.isFocused, itemProps = _a.itemProps, itemsPerRow = _a.itemsPerRow, selectedIndex = _a.selectedIndex, enableItemGrid = _a.enableItemGrid, isEpisodesListPage = _a.isEpisodesListPage, showTrailerMetadata = _a.showTrailerMetadata, isAccountWatchedHistoryPage = _a.isAccountWatchedHistoryPage, isAccountContinueWatchingPage = _a.isAccountContinueWatchingPage;\n        var displayShowTitle = list.id === listId["b" /* ContinueWatching */] || list.id === listId["c" /* Watched */];\n        var additionalMetadata = this.props.additionalMetadata || showTrailerMetadata || isAccountContinueWatchingPage;\n        var itemGridWidth = enableItemGrid && calculateColumnWidth(itemsPerRow);\n        return (react["createElement"]("div", { style: { position: \'relative\', height: height + \'px\' } }, items.map(function (item, i) { return (react["createElement"](Asset["a" /* default */], Object(tslib_es6["a" /* __assign */])({ item: item }, itemProps, { index: offset + i, key: "".concat(item.id, "-").concat(i), totalAssets: list.size, itemsPerRow: itemsPerRow, isContinuousList: true, itemGridWidth: itemGridWidth, isEpisodeRow: isEpisodesListPage, hideItemBadge: isEpisodesListPage, displayShowTitle: displayShowTitle, additionalMetadata: additionalMetadata, showTrailerMetadata: showTrailerMetadata, position: _this.getItemWatchedPosition(item), watchHistoryRow: isAccountWatchedHistoryPage, showProgressBar: isAccountContinueWatchingPage, focused: isFocused && selectedIndex === offset + i, continueWatchingRow: isAccountContinueWatchingPage }))); })));\n    };\n    return ContinuousScrollListRow;\n}(react["Component"]));\n/* harmony default export */ var continuous_ContinuousScrollListRow = __webpack_exports__["a"] = (ContinuousScrollListRow_ContinuousScrollListRow);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1039\n')},274:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(245);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(247);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var shared_util_styles__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(244);\n/* harmony import */ var shared_list_listUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(271);\n/* harmony import */ var ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(248);\n/* harmony import */ var ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(253);\n/* harmony import */ var ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(252);\n/* harmony import */ var ref_tv_util_rows__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(269);\n/* harmony import */ var ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(246);\n/* harmony import */ var bell_tv_component_ItemsCount__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(352);\n/* harmony import */ var _H10Text_scss__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(305);\n/* harmony import */ var _H10Text_scss__WEBPACK_IMPORTED_MODULE_12___default = /*#__PURE__*/__webpack_require__.n(_H10Text_scss__WEBPACK_IMPORTED_MODULE_12__);\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar bem = new shared_util_styles__WEBPACK_IMPORTED_MODULE_4__[/* Bem */ "a"](\'h10\');\nvar H10Text = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "c"])(H10Text, _super);\n    function H10Text(props) {\n        var _this = _super.call(this, props) || this;\n        _this.updateStyles = function (customFields) {\n            if (!customFields)\n                return;\n            var custom = _this.props.customFields;\n            var backgroundColor = custom.backgroundColor, textColor = custom.textColor;\n            _this.ref.style.backgroundColor = Object(ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_6__[/* resolveColor */ "D"])(backgroundColor, \'#000\');\n            _this.ref.style.color = Object(ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_6__[/* resolveColor */ "D"])(textColor, \'#fff\');\n        };\n        _this.onRef = function (ref) {\n            _this.ref = ref;\n        };\n        _this.state = {\n            focused: false\n        };\n        _this.focusableRow = new ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_7__[/* UnfocusableRow */ "c"](10);\n        return _this;\n    }\n    H10Text.prototype.componentDidMount = function () {\n        var _a = this.props, customFields = _a.customFields, template = _a.template, index = _a.index;\n        var _b = customFields, subheading = _b.subheading, intlHeading = _b.intlHeading;\n        var entryNode = this.context.focusNav.getRowEntry(index);\n        if (!entryNode)\n            entryNode = this.ref;\n        Object(ref_tv_util_rows__WEBPACK_IMPORTED_MODULE_9__[/* setPaddingStyle */ "a"])(entryNode, customFields);\n        this.focusableRow.ref = this.ref;\n        this.focusableRow.template = template;\n        var focusableRowHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"].h10LessHeight;\n        if (intlHeading)\n            focusableRowHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"].liveComingUpHeaderHeight;\n        else if (subheading)\n            focusableRowHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_10__[/* default */ "a"].h10Height;\n        this.focusableRow.height = focusableRowHeight;\n        this.focusableRow.entryProps = this.props;\n        this.updateStyles(customFields);\n        this.context.focusNav.registerRow(this.focusableRow);\n    };\n    H10Text.prototype.componentWillUnmount = function () {\n        this.context.focusNav.unregisterRow(this.focusableRow);\n    };\n    H10Text.prototype.componentDidUpdate = function (prevProps) {\n        if (this.props.customFields !== prevProps.customFields) {\n            this.updateStyles(this.props.customFields);\n        }\n    };\n    H10Text.prototype.render = function () {\n        var _a;\n        var _b = this.props, text = _b.text, template = _b.template, customFields = _b.customFields, list = _b.list;\n        var _c = customFields, subheading = _c.subheading, textHorizontalAlignment = _c.textHorizontalAlignment, intlHeading = _c.intlHeading;\n        var classNames = [\n            bem.b(),\n            bem.b(intlHeading ? \'hasIntl\' : subheading ? \'hasSub\' : \'\'),\n            \'full-bleed\',\n            "txt-".concat(Object(ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_6__[/* resolveAlignment */ "C"])(textHorizontalAlignment))\n        ];\n        if (!classNames.indexOf(template))\n            classNames.unshift(template.toLowerCase());\n        var classes = classnames__WEBPACK_IMPORTED_MODULE_3___default.a.apply(void 0, classNames);\n        var count = (list && list.size) || 0;\n        var isFromListPage = !!((_a = list === null || list === void 0 ? void 0 : list.customFields) === null || _a === void 0 ? void 0 : _a.isFromListPage);\n        var shouldShowItemCount = !Object(shared_list_listUtil__WEBPACK_IMPORTED_MODULE_5__[/* isListofLists */ "q"])(list) && isFromListPage && !Object(shared_list_listUtil__WEBPACK_IMPORTED_MODULE_5__[/* isTrailerList */ "s"])(list);\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: classes, ref: this.onRef },\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: "content-margin" },\n                !intlHeading && (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'heading\', { \'list-page-header\': isFromListPage }) },\n                    react__WEBPACK_IMPORTED_MODULE_1__["createElement"](ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"], null, text),\n                    shouldShowItemCount && react__WEBPACK_IMPORTED_MODULE_1__["createElement"](bell_tv_component_ItemsCount__WEBPACK_IMPORTED_MODULE_11__[/* default */ "a"], { count: count }))),\n                this.renderSubheading(subheading),\n                this.renderCustomIntlHeading(intlHeading))));\n    };\n    H10Text.prototype.renderCustomIntlHeading = function (intlHeading) {\n        if (!intlHeading)\n            return;\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'intl-heading-container\') },\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'dividing-line\') }),\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"](ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"], { tagName: "span", className: bem.e(\'intl-heading\') }, intlHeading)));\n    };\n    H10Text.prototype.renderSubheading = function (subheading) {\n        if (!subheading)\n            return;\n        return react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'subHeading\') }, subheading);\n    };\n    H10Text.contextTypes = {\n        focusNav: prop_types__WEBPACK_IMPORTED_MODULE_2__["object"].isRequired\n    };\n    return H10Text;\n}(react__WEBPACK_IMPORTED_MODULE_1__["PureComponent"]));\n/* harmony default export */ __webpack_exports__["a"] = (H10Text);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///274\n')},305:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jcmF2ZS90di9wYWdlRW50cnkvaGVyby9oMTAvSDEwVGV4dC5zY3NzP2MyMGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiMzA1LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///305\n")},307:function(module,__webpack_exports__,__webpack_require__){"use strict";eval("/* WEBPACK VAR INJECTION */(function(setImmediate) {/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(245);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(251);\n/* harmony import */ var react_redux__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(react_redux__WEBPACK_IMPORTED_MODULE_3__);\n/* harmony import */ var ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(252);\n/* harmony import */ var shared_page_pageEntryTemplate__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(254);\n/* harmony import */ var shared_list_listUtil__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(271);\n/* harmony import */ var ref_tv_component_DropButton__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(945);\n/* harmony import */ var shared_util_styles__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(244);\n/* harmony import */ var ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(253);\n/* harmony import */ var ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(249);\n/* harmony import */ var ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(273);\n/* harmony import */ var shared_page_pageWorkflow__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(290);\n/* harmony import */ var ref_tv_component_modal_TitledListModal__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(399);\n/* harmony import */ var ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__ = __webpack_require__(246);\n/* harmony import */ var shared_list_listId__WEBPACK_IMPORTED_MODULE_15__ = __webpack_require__(304);\n/* harmony import */ var ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_16__ = __webpack_require__(248);\n/* harmony import */ var ref_tv_pageEntry_continuous_ContinuousScrollListRow__WEBPACK_IMPORTED_MODULE_17__ = __webpack_require__(1039);\n/* harmony import */ var ref_tv_pageEntry_continuous_ContinuousScrollList_scss__WEBPACK_IMPORTED_MODULE_18__ = __webpack_require__(947);\n/* harmony import */ var ref_tv_pageEntry_continuous_ContinuousScrollList_scss__WEBPACK_IMPORTED_MODULE_18___default = /*#__PURE__*/__webpack_require__.n(ref_tv_pageEntry_continuous_ContinuousScrollList_scss__WEBPACK_IMPORTED_MODULE_18__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar DEFAULT_CLASSIFICATION_OPTION = {\n    label: 'classification_default',\n    key: ref_tv_component_DropButton__WEBPACK_IMPORTED_MODULE_7__[/* PLACEHOLDER_KEY */ \"b\"]\n};\nvar DEFAULT_SORT_OPTION = {\n    label: 'listPage_sort_default',\n    key: ref_tv_component_DropButton__WEBPACK_IMPORTED_MODULE_7__[/* PLACEHOLDER_KEY */ \"b\"]\n};\n// Don't edit these sort option keys.\n//\n// The keys represent short form order query parameters\n// and get passed through to Rocket which understands\n// how to expand them in to sort full options.\n// tbc : we'll do International Support in Sprint 6\nvar SORT_OPTIONS = [\n    DEFAULT_SORT_OPTION,\n    { label: 'listPage_sort_aToz', key: 'a-z' },\n    { label: 'listPage_sort_zToa', key: 'z-a' },\n    { label: 'listPage_sort_latestAdded', key: 'latest-added' },\n    { label: 'listPage_sort_oldestAdded', key: 'oldest-added' },\n    { label: 'listPage_sort_latestRelease', key: 'latest-release' },\n    { label: 'listPage_sort_oldestRelease', key: 'oldest-release' }\n];\nvar bem = new shared_util_styles__WEBPACK_IMPORTED_MODULE_8__[/* Bem */ \"a\"]('cs-list');\nvar ITEM_MARGIN = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].itemMargin;\n/**\n * Continuous Scroll  List\n *\n * The base component used for CS rows (CS1-5) on list pages\n */\nvar ContinuousScrollList = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ \"c\"])(ContinuousScrollList, _super);\n    function ContinuousScrollList(props) {\n        var _this = _super.call(this, props) || this;\n        _this.classificationOptions = [];\n        _this.restoreSavedState = function (savedState) {\n            if (!savedState)\n                return;\n            var _a = _this.props, itemsPerRow = _a.itemsPerRow, isUserList = _a.isUserList, loadNextPage = _a.loadNextPage, restorePage = _a.restorePage;\n            var list = savedState.list, selectedClassification = savedState.selectedClassification, selectedSort = savedState.selectedSort, selectedIndex = savedState.selectedIndex, selectedItemId = savedState.selectedItemId, isFocused = savedState.isFocused, focusState = savedState.focusState;\n            var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n            if (isUserList) {\n                var _b = _this.state.list, items = _b.items, _c = _b.paging, itemsPerPage = _c.size, pageIndex = _c.page;\n                if (selectedIndex > items.length - 1 && loadNextPage) {\n                    var endPageNum = Math.ceil((selectedIndex + 1) / itemsPerPage);\n                    var startPageNum_1 = pageIndex + 1;\n                    var pagesWaitingToLoad = endPageNum - pageIndex;\n                    var loadNextPages = Array.from(Array(pagesWaitingToLoad)).map(function () { return loadNextPage(startPageNum_1++); });\n                    Promise.all(loadNextPages).then(function () {\n                        restorePage(false);\n                        _this.setState({ selectedClassification: selectedClassification, selectedSort: selectedSort, selectedIndex: selectedIndex, selectedItemId: selectedItemId, isFocused: isFocused, focusState: focusState }, _this.trackedItemFocused);\n                    });\n                }\n                else {\n                    restorePage(false);\n                    _this.setState({ selectedClassification: selectedClassification, selectedSort: selectedSort, selectedIndex: selectedIndex, selectedItemId: selectedItemId, isFocused: isFocused, focusState: focusState }, _this.trackedItemFocused);\n                }\n                return;\n            }\n            _this.calcRowHeight(_this.props);\n            _this.mapRows(list, itemsPerRow);\n            _this.setState({\n                list: list,\n                selectedClassification: selectedClassification,\n                selectedSort: selectedSort,\n                selectedIndex: selectedIndex,\n                selectedItemId: selectedItem ? selectedItem.id : '',\n                isFocused: isFocused,\n                focusState: focusState\n            }, _this.trackedItemFocused);\n        };\n        _this.getLeftToViewport = function () {\n            var _a = _this.props, imageWidth = _a.imageWidth, itemsPerRow = _a.itemsPerRow;\n            var selectedIndex = _this.state.selectedIndex;\n            var colNum = selectedIndex % itemsPerRow;\n            var leftToViewport = colNum * (imageWidth + ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].itemMargin);\n            return leftToViewport;\n        };\n        _this.calcFocusableIndex = function (sourceLeftToViewport, directional) {\n            var _a = _this.props, imageWidth = _a.imageWidth, itemsPerRow = _a.itemsPerRow;\n            var lens = _this.state.list.items.length;\n            var chooseIndex = -1;\n            var minDistance = 99999;\n            if (directional === 'up') {\n                for (var i = lens - 1; i >= 0; --i) {\n                    var colNum = i % itemsPerRow;\n                    var leftToViewport = colNum * imageWidth;\n                    var distance = Math.abs(leftToViewport - sourceLeftToViewport);\n                    if (distance <= minDistance) {\n                        minDistance = distance;\n                        chooseIndex = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            else {\n                for (var i = 0; i < itemsPerRow; ++i) {\n                    var colNum = i % itemsPerRow;\n                    var leftToViewport = colNum * imageWidth;\n                    var distance = Math.abs(leftToViewport - sourceLeftToViewport);\n                    if (distance <= minDistance) {\n                        minDistance = distance;\n                        chooseIndex = i;\n                    }\n                    else {\n                        break;\n                    }\n                }\n            }\n            return chooseIndex;\n        };\n        _this.setFocus = function (isFocused, sourceLeftToViewport, directional) {\n            if (_this.context.focusNav.isGoingBack) {\n                _this.setState({ isFocused: isFocused });\n                return true;\n            }\n            var _a = _this.state, focusState = _a.focusState, selectedIndex = _a.selectedIndex, list = _a.list;\n            var selectedIndexChanged, selectedItem, selectedItemId;\n            if (directional && directional === 'down') {\n                _this.context.focusNav.blockScrollOnce = true;\n                if (list && (list.size > 0 || list.size === -1)) {\n                    focusState = 'list';\n                }\n                else {\n                    focusState = 'clear';\n                }\n            }\n            if (isFocused) {\n                var shouldFocusIndex = _this.calcFocusableIndex(sourceLeftToViewport || 0, directional);\n                if (shouldFocusIndex > -1) {\n                    selectedIndex = shouldFocusIndex;\n                    selectedIndexChanged = true;\n                }\n            }\n            else {\n                _this.trackedItemFocused(true);\n            }\n            selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n            selectedItemId = selectedItem ? selectedItem.id : '';\n            if (selectedIndexChanged) {\n                _this.setState({ isFocused: isFocused, focusState: focusState, selectedIndex: selectedIndex, selectedItemId: selectedItemId }, _this.trackedItemFocused);\n            }\n            else {\n                _this.setState({ isFocused: isFocused, focusState: focusState, selectedIndex: selectedIndex, selectedItemId: selectedItemId });\n            }\n            return true;\n        };\n        _this.setFocusState = function (focusState) {\n            if (focusState === 'filter' && !_this.displayFilter) {\n                return false;\n            }\n            _this.setState({ focusState: focusState });\n            return true;\n        };\n        _this.trackedItemFocused = function (isMouseLeave) {\n            var _a = _this.state, list = _a.list, selectedIndex = _a.selectedIndex, focusState = _a.focusState;\n            var item = list.items && list.items.length > 0 && list.items[selectedIndex];\n            focusState === 'list' &&\n                _this.context.focusNav.analytics.triggerItemEvents(isMouseLeave ? 'MOUSELEAVE' : 'MOUSEENTER', item, _this.props, selectedIndex, _this.props.imageType);\n        };\n        _this.moveLeft = function () {\n            var _a = _this.state, focusState = _a.focusState, list = _a.list;\n            switch (focusState) {\n                case 'list':\n                    var itemsPerRow = _this.props.itemsPerRow;\n                    var selectedIndex = _this.state.selectedIndex;\n                    if (selectedIndex % itemsPerRow > 0) {\n                        selectedIndex--;\n                        var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n                        _this.setState({ selectedIndex: selectedIndex, selectedItemId: selectedItem ? selectedItem.id : '' }, _this.trackedItemFocused);\n                    }\n                    return true;\n                case 'sort':\n                    _this.setState({ focusState: 'filter' });\n                    return true;\n                case 'filter':\n                    _this.context.focusNav.focusPrevRow(_this.focusableRow.index);\n                    return false;\n                default:\n                    break;\n            }\n            return true;\n        };\n        _this.moveRight = function () {\n            var _a = _this.state, focusState = _a.focusState, list = _a.list;\n            switch (focusState) {\n                case 'list':\n                    var itemsPerRow = _this.props.itemsPerRow;\n                    var selectedIndex = _this.state.selectedIndex;\n                    if (selectedIndex % itemsPerRow < itemsPerRow - 1) {\n                        selectedIndex++;\n                        if (selectedIndex >= list.items.length)\n                            return true;\n                        var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n                        _this.setState({ selectedIndex: selectedIndex, selectedItemId: selectedItem ? selectedItem.id : '' }, _this.trackedItemFocused);\n                    }\n                    return true;\n                case 'sort':\n                    return false;\n                case 'filter':\n                    _this.setState({ focusState: 'sort' });\n                    return true;\n                default:\n                    break;\n            }\n            return true;\n        };\n        _this.moveUp = function () {\n            var _a = _this.state, focusState = _a.focusState, list = _a.list;\n            var focusNav = _this.context.focusNav;\n            var prevRow = focusNav.getPrevFocusableRow(_this.focusableRow.index, true);\n            var isListHero = prevRow && (prevRow.template === shared_page_pageEntryTemplate__WEBPACK_IMPORTED_MODULE_5__[\"Lh1Standard\"] || prevRow.template === shared_page_pageEntryTemplate__WEBPACK_IMPORTED_MODULE_5__[\"Lh2Centered\"]);\n            switch (focusState) {\n                case 'list':\n                    var itemsPerRow = _this.props.itemsPerRow;\n                    var selectedIndex = _this.state.selectedIndex;\n                    selectedIndex -= itemsPerRow;\n                    if (selectedIndex < 0) {\n                        selectedIndex = _this.state.selectedIndex;\n                    }\n                    if (selectedIndex !== _this.state.selectedIndex) {\n                        var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n                        _this.setState({ selectedIndex: selectedIndex, selectedItemId: selectedItem ? selectedItem.id : '' }, _this.trackedItemFocused);\n                        focusNav.scrollY('up');\n                    }\n                    else {\n                        _this.trackedItemFocused(true);\n                        if (!_this.displayFilter) {\n                            return false;\n                        }\n                        if (selectedIndex === 0 && prevRow && prevRow.index !== 0 && isListHero) {\n                            return false;\n                        }\n                        else {\n                            _this.setState({ focusState: 'filter' });\n                            focusNav.scrollY('up');\n                        }\n                    }\n                    return true;\n                case 'sort':\n                case 'filter':\n                    if (isListHero) {\n                        focusNav.moveToRow(0);\n                    }\n                    else {\n                        return false;\n                    }\n                    return true;\n                case 'clear':\n                    if (!_this.displayFilter) {\n                        return false;\n                    }\n                    _this.setState({ focusState: 'filter' });\n                    focusNav.scrollY('up');\n                    return true;\n                default:\n                    break;\n            }\n            return false;\n        };\n        _this.moveDown = function () {\n            var _a = _this.state, focusState = _a.focusState, list = _a.list;\n            switch (focusState) {\n                case 'list':\n                    var _b = _this.props, loadNextPage = _b.loadNextPage, itemsPerRow = _b.itemsPerRow;\n                    var selectedIndex = _this.state.selectedIndex;\n                    var maxLineCount = Math.ceil(list.items.length / itemsPerRow);\n                    var curLineCount = Math.ceil((selectedIndex + 1) / itemsPerRow);\n                    var isTheLastLine = false;\n                    selectedIndex += itemsPerRow;\n                    if (selectedIndex > list.items.length - 1) {\n                        if (maxLineCount === curLineCount) {\n                            selectedIndex = _this.state.selectedIndex;\n                            isTheLastLine = true;\n                        }\n                        else {\n                            selectedIndex = list.items.length - 1;\n                        }\n                    }\n                    if (selectedIndex !== _this.state.selectedIndex) {\n                        var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n                        _this.setState({ selectedIndex: selectedIndex, selectedItemId: selectedItem ? selectedItem.id : '' }, _this.trackedItemFocused);\n                        _this.context.focusNav.scrollY('down');\n                    }\n                    if (list.items.length < list.size) {\n                        if (loadNextPage) {\n                            var pageNum = list.paging.page + 1;\n                            pageNum <= list.paging.total && loadNextPage(pageNum);\n                        }\n                        else {\n                            _this.onScrollBottom();\n                        }\n                        return true;\n                    }\n                    else {\n                        isTheLastLine && _this.trackedItemFocused(true);\n                        // if is the last line, return false\n                        return !isTheLastLine;\n                    }\n                case 'sort':\n                case 'filter':\n                    if (list.size > 0 || list.size === -1) {\n                        _this.setState({ focusState: 'list' }, _this.trackedItemFocused);\n                    }\n                    else {\n                        _this.setState({ focusState: 'clear' });\n                    }\n                    _this.context.focusNav.scrollY('down');\n                    return true;\n                case 'clear':\n                    return false;\n                default:\n                    break;\n            }\n            return false;\n        };\n        _this.exec = function (act, focusState) {\n            switch (act) {\n                case ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_9__[/* ActionEnum */ \"a\"].CLICK:\n                    if (!focusState) {\n                        focusState = _this.state.focusState;\n                    }\n                    switch (focusState) {\n                        case 'list':\n                            _this.invokeItem();\n                            return true;\n                        case 'sort':\n                            _this.context.focusNav.showDialog(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_modal_TitledListModal__WEBPACK_IMPORTED_MODULE_13__[/* default */ \"a\"], { title: '@{continuous_scroll_sort|SORT}', entries: SORT_OPTIONS, selectedKey: _this.state.selectedSort, ref: _this.context.focusNav.requestFocus, onItemClicked: _this.onItemClickedSort, needLocalization: true }));\n                            return true;\n                        case 'filter':\n                            _this.context.focusNav.showDialog(react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_modal_TitledListModal__WEBPACK_IMPORTED_MODULE_13__[/* default */ \"a\"], { title: '@{continuous_scroll_rating|RATING}', entries: _this.classificationOptions, selectedKey: _this.state.selectedClassification, ref: _this.context.focusNav.requestFocus, onItemClicked: _this.onItemClickedFilter, needLocalization: true }));\n                            return true;\n                        case 'clear':\n                            _this.resetFilters(undefined);\n                            return true;\n                        default:\n                            break;\n                    }\n                    break;\n                default:\n                    break;\n            }\n            return false;\n        };\n        _this.onItemClickedSort = function (index) {\n            _this.context.focusNav.hideDialog();\n            var sortStr = SORT_OPTIONS[index].key;\n            _this.onSelectSort(sortStr);\n        };\n        _this.onItemClickedFilter = function (index) {\n            _this.context.focusNav.hideDialog();\n            var rateStr = _this.classificationOptions[index].key;\n            _this.onSelectClassification(rateStr);\n        };\n        _this.invokeItem = function () {\n            var _a = _this.state, list = _a.list, selectedIndex = _a.selectedIndex;\n            var _b = _this.props, isTrailersListPage = _b.isTrailersListPage, imageType = _b.imageType, isEpisodesListPage = _b.isEpisodesListPage;\n            var analytics = _this.context.focusNav.analytics;\n            var item = list.items && list.items.length > 0 && list.items[selectedIndex];\n            if (!item)\n                return;\n            analytics.triggerItemEvents('CLICK', item, _this.props, selectedIndex, imageType);\n            if (list.id === shared_list_listId__WEBPACK_IMPORTED_MODULE_15__[/* Watched */ \"c\"] || list.id === shared_list_listId__WEBPACK_IMPORTED_MODULE_15__[/* ContinueWatching */ \"b\"]) {\n                var isEntitled = Object(ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_16__[/* canPlay */ \"c\"])(item);\n                if (isEntitled) {\n                    _this.context.detailHelper.isInChainingPlay = false;\n                    analytics.triggerItemWatched(true, item);\n                    _this.context.router.push(item.watchPath);\n                }\n                else {\n                    _this.context.detailHelper.showNoEntitlementMessage();\n                }\n            }\n            else {\n                if (isTrailersListPage || isEpisodesListPage) {\n                    _this.context.detailHelper.onClickWatch(item, function (ret) {\n                        ret && _this.context.router.push(item.watchPath);\n                    }, false);\n                }\n                else {\n                    _this.context.router.push(item.path);\n                }\n            }\n        };\n        _this.onSelectSort = function (selectedSort) {\n            if (selectedSort === _this.state.selectedSort)\n                return;\n            _this.setState({ selectedSort: selectedSort, listPageLoading: true, listLoaded: false });\n            _this.onSortFilter(selectedSort, _this.state.selectedClassification);\n        };\n        _this.onSelectClassification = function (selectedClassification) {\n            if (selectedClassification === _this.state.selectedClassification)\n                return;\n            _this.setState({ selectedClassification: selectedClassification, listPageLoading: true, listLoaded: false });\n            _this.onSortFilter(_this.state.selectedSort, selectedClassification);\n        };\n        _this.resetFilters = function (e) {\n            _this.setState({\n                selectedSort: DEFAULT_SORT_OPTION.key,\n                selectedClassification: DEFAULT_CLASSIFICATION_OPTION.key\n            });\n            _this.onSortFilter(DEFAULT_SORT_OPTION.key, DEFAULT_CLASSIFICATION_OPTION.key);\n        };\n        _this.onScrollBottom = function () {\n            var loadNextListPage = _this.props.loadNextListPage;\n            var list = _this.state.list;\n            _this.setState({ listPageLoading: true });\n            loadNextListPage && loadNextListPage(list);\n        };\n        _this.onSortFilter = function (sortKey, maxRating) {\n            if (sortKey === DEFAULT_SORT_OPTION.key)\n                sortKey = undefined;\n            if (maxRating === DEFAULT_CLASSIFICATION_OPTION.key)\n                maxRating = undefined;\n            if (_this.props.queryParamsEnabled) {\n                _this.updateQueryParams(sortKey, maxRating);\n            }\n            else {\n                _this.loadListDirectly(sortKey, maxRating);\n            }\n        };\n        _this.handleMouseEnter = function () {\n            _this.setState({ isFocused: true });\n        };\n        _this.mouseEnterDropBtn = function (focusState) {\n            _this.setState({ focusState: focusState });\n        };\n        _this.mouseEnterClearBtn = function () {\n            _this.setState({ focusState: 'clear' });\n        };\n        _this.mouseEnterAsset = function (index) {\n            var list = _this.state.list;\n            var selectedItem = list.items && list.items.length > 0 && list.items[index];\n            _this.setState({ selectedIndex: index, selectedItemId: selectedItem ? selectedItem.id : '', focusState: 'list' }, _this.trackedItemFocused);\n        };\n        _this.handleClick = function (focusState) {\n            if (_this.state.focusState !== focusState) {\n                _this.setState({ focusState: focusState });\n            }\n            _this.exec(ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_9__[/* ActionEnum */ \"a\"].CLICK, focusState);\n        };\n        _this.state = {\n            list: props.list,\n            listPageLoading: false,\n            listLoaded: false,\n            selectedIndex: -1,\n            selectedItemId: '',\n            isFocused: false,\n            focusState: 'list'\n        };\n        _this.focusableRow = {\n            internalNavi: true,\n            focusable: true,\n            index: (props.index + 1) * 10,\n            height: 0,\n            maxHeight: 0,\n            innerTop: 0,\n            template: props.template,\n            entryProps: props,\n            restoreSavedState: _this.restoreSavedState,\n            setFocus: _this.setFocus,\n            moveLeft: _this.moveLeft,\n            moveRight: _this.moveRight,\n            moveUp: _this.moveUp,\n            moveDown: _this.moveDown,\n            exec: _this.exec,\n            getLeftToViewport: _this.getLeftToViewport,\n            setFocusState: _this.setFocusState\n        };\n        _this.calcFilter(props);\n        _this.calcRowHeight(props);\n        _this.mapRows(props.list, props.itemsPerRow);\n        return _this;\n    }\n    ContinuousScrollList.prototype.componentDidMount = function () {\n        var _this = this;\n        var _a = this.props, autoFocus = _a.autoFocus, restorePage = _a.restorePage, isUserList = _a.isUserList;\n        if (isUserList && this.context.focusNav.isGoingBack)\n            restorePage(true);\n        var list = this.state.list;\n        this.focusableRow.ref = this.ref;\n        this.context.focusNav.registerRow(this.focusableRow);\n        this.context.focusNav.blockScrollOnce = true;\n        if (autoFocus) {\n            this.context.focusNav.moveToRow(this.focusableRow.index);\n        }\n        this.classificationOptions = this.getClassificationOptions(this.context.detailHelper.classification);\n        if (list.size <= 0 && list.size !== -1) {\n            this.setState({ focusState: 'clear' });\n        }\n        this.context.focusNav.addEventHandler(ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_11__[/* GlobalEvent */ \"b\"].BACK_TO_TOP, 'row' + this.props.index, function () {\n            var selectedItem = list.items && list.items.length > 0 && list.items[0];\n            _this.setState({ selectedIndex: 0, selectedItemId: selectedItem ? selectedItem.id : '', focusState: 'list' });\n        });\n    };\n    ContinuousScrollList.prototype.componentWillUnmount = function () {\n        this.context.focusNav.unregisterRow(this.focusableRow);\n        this.context.focusNav.removeEventHandler(ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_11__[/* GlobalEvent */ \"b\"].BACK_TO_TOP, 'row' + this.props.index);\n    };\n    ContinuousScrollList.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.list && nextProps.list !== this.state.list) {\n            this.checkLoadedState(nextProps.list);\n            if (nextProps.list.id !== this.state.list.id) {\n                this.setState({\n                    selectedSort: DEFAULT_SORT_OPTION.key,\n                    selectedClassification: DEFAULT_CLASSIFICATION_OPTION.key\n                });\n                this.context.focusNav.blockScrollOnce = true;\n            }\n            else if (nextProps.location &&\n                nextProps.location.query &&\n                Object.keys(nextProps.location.query).length === 0 &&\n                this.state.selectedClassification !== DEFAULT_CLASSIFICATION_OPTION.key &&\n                this.state.selectedSort !== DEFAULT_SORT_OPTION.key) {\n                this.resetFilters(undefined);\n            }\n            this.calcFilter(nextProps);\n            this.calcRowHeight(nextProps);\n            this.mapRows(nextProps.list, nextProps.itemsPerRow);\n            if (nextProps.autoFocus) {\n                this.context.focusNav.moveToRow(this.focusableRow.index);\n            }\n        }\n        this.focusableRow.entryProps = nextProps;\n    };\n    ContinuousScrollList.prototype.componentDidUpdate = function () {\n        var _a = this.state, list = _a.list, selectedIndex = _a.selectedIndex, selectedItemId = _a.selectedItemId;\n        var selectedItem = list.items && list.items.length > 0 && list.items[selectedIndex];\n        this.focusableRow.savedState = Object.assign({}, this.state);\n        // For normal list, just restore the saved state when user go back.\n        // For user list, verify the selected item is still valid or has a new index when the list is updated.\n        // If the selected item is invalid, the first item gets focus.\n        if (this.props.isUserList &&\n            list.items.length > 0 &&\n            selectedItemId &&\n            (!selectedItem || selectedItem.id !== selectedItemId)) {\n            var shouldFocusIndex = list.items.findIndex(function (item) { return item.id === selectedItemId; });\n            if (shouldFocusIndex === -1) {\n                this.setState({ selectedIndex: 0, selectedItemId: list.items[0].id });\n                this.context.focusNav.focusOnFirstRow();\n                this.context.focusNav.blockScrollOnce = true;\n                return;\n            }\n            else {\n                this.setState({ selectedIndex: shouldFocusIndex });\n            }\n        }\n        if (this.state.isFocused) {\n            this.calcRowHeight(this.props);\n            this.context.focusNav.scrollY();\n        }\n    };\n    ContinuousScrollList.prototype.mapRows = function (list, itemsPerRow) {\n        this.rows = [];\n        if (!list.items || list.items.length === 0)\n            return;\n        if (isNaN(itemsPerRow) || itemsPerRow < 1)\n            itemsPerRow = 1;\n        var count = Math.ceil(list.items.length / itemsPerRow);\n        for (var i = 0; i < count; i++) {\n            var items = list.items.slice(i * itemsPerRow, (i + 1) * itemsPerRow);\n            this.rows.push(items);\n        }\n    };\n    ContinuousScrollList.prototype.calcRowHeight = function (props) {\n        var customFields = props.customFields, imageType = props.imageType, itemsPerRow = props.itemsPerRow, showEpisodeMetadata = props.showEpisodeMetadata, isAccountContinueWatchingPage = props.isAccountContinueWatchingPage, isAccountWatchedHistoryPage = props.isAccountWatchedHistoryPage, isFromListPage = props.isFromListPage, isTrailersListPage = props.isTrailersListPage, isEpisodesListPage = props.isEpisodesListPage, isCollectionPage = props.isCollectionPage, hideItemBadge = props.hideItemBadge;\n        var _a = this.state, isFocused = _a.isFocused, focusState = _a.focusState, selectedIndex = _a.selectedIndex, list = _a.list;\n        var itemHeight;\n        var maxHeight;\n        switch (imageType) {\n            case 'poster':\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetPostHeight;\n                break;\n            case 'tile':\n            case 'wallpaper':\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetTileHeight;\n                break;\n            case 'block':\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetBlockHeight;\n                break;\n            case 'square':\n            case 'logo':\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetSquareHeight;\n                break;\n            case 'tall':\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetTallHeight;\n                break;\n            default:\n                itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetPostHeight;\n                break;\n        }\n        if (isFromListPage) {\n            itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].listPageAssetPostHeight;\n        }\n        if (customFields && customFields.assetTitlePosition === 'below') {\n            itemHeight += ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetBelowTitleTotalHeight;\n        }\n        if (showEpisodeMetadata) {\n            itemHeight += ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetBelowEpisodeMetadataHeight;\n        }\n        if (isTrailersListPage || isEpisodesListPage) {\n            itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetTileHeightCrave;\n        }\n        if (isAccountWatchedHistoryPage || isAccountContinueWatchingPage) {\n            // TODO: why imageWidth var assigned to height value? Refactor to proper one\n            itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].tileImageWidth;\n        }\n        if (isCollectionPage) {\n            itemHeight = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].collectionItemHeight;\n        }\n        var hasBadge = list.items.some(function (item) { return !!item.badge; });\n        if (!hideItemBadge && hasBadge) {\n            itemHeight += ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].assetBadgeTitleHeight;\n        }\n        var filterBtnHeight = this.displayFilter ? ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].listFilterDropBtnHeight : 0;\n        if (list.size > 0) {\n            var totalRowsHeight = Math.ceil(list.size / itemsPerRow) * itemHeight;\n            maxHeight = filterBtnHeight + totalRowsHeight;\n        }\n        else {\n            maxHeight = filterBtnHeight + ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].listClearFilterBtnHeight;\n        }\n        this.itemHeight = itemHeight;\n        this.focusableRow.maxHeight = maxHeight;\n        if (isFocused) {\n            switch (focusState) {\n                case 'list':\n                    var rowTop = Math.floor(selectedIndex / itemsPerRow) * itemHeight;\n                    this.focusableRow.height = itemHeight;\n                    this.focusableRow.innerTop = filterBtnHeight + rowTop;\n                    break;\n                case 'filter':\n                case 'sort':\n                    this.focusableRow.height = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].listFilterDropBtnHeight;\n                    this.focusableRow.innerTop = 0;\n                    break;\n                case 'clear':\n                    this.focusableRow.height = ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].listClearFilterBtnHeight;\n                    this.focusableRow.innerTop = filterBtnHeight;\n                    break;\n                default:\n                    break;\n            }\n        }\n        else {\n            this.focusableRow.innerTop = 0;\n            this.focusableRow.height = maxHeight;\n        }\n    };\n    ContinuousScrollList.prototype.checkLoadedState = function (list) {\n        if (list.size <= 0 && list.size !== -1) {\n            this.setState({ list: list, focusState: 'clear' });\n            return;\n        }\n        this.setState({\n            list: list,\n            focusState: 'list',\n            listPageLoading: list.size === -1,\n            listLoaded: list.size === list.items.length\n        });\n    };\n    /**\n     * If persisting sort/filter state in query parameters then delegate\n     * list loading via page changes by updating query parameters.\n     */\n    ContinuousScrollList.prototype.updateQueryParams = function (sort, maxRating) {\n        var params = [];\n        if (sort)\n            params.push(\"order=\".concat(encodeURIComponent(sort)));\n        if (maxRating)\n            params.push(\"max_rating=\".concat(encodeURIComponent(maxRating)));\n        var query = params.length ? \"?\".concat(params.join('&')) : '';\n        var path = \"\".concat(this.props.location.pathname).concat(query);\n        this.context.router.replace(path);\n        this.props.refreshPage();\n    };\n    /**\n     * If not managing sort/filter state in query parameters then store\n     * in local persisted state and trigger the list page load directly.\n     */\n    ContinuousScrollList.prototype.loadListDirectly = function (sortKey, maxRating) {\n        var _a = this.props, loadListPage = _a.loadListPage, savedState = _a.savedState;\n        var list = this.state.list;\n        var options = shared_list_listUtil__WEBPACK_IMPORTED_MODULE_6__[/* SORT_OPTIONS_LOOKUP */ \"c\"][sortKey] || {};\n        if (maxRating) {\n            options = Object.assign({ maxRating: maxRating }, options);\n        }\n        var listKey = Object(shared_list_listUtil__WEBPACK_IMPORTED_MODULE_6__[/* getListKey */ \"j\"])(list, options);\n        if (savedState) {\n            savedState.listKey = listKey;\n        }\n        loadListPage && loadListPage(list, 1, options);\n    };\n    ContinuousScrollList.prototype.getClassificationOptions = function (classifications) {\n        var ret = [];\n        if (classifications) {\n            ret.push(DEFAULT_CLASSIFICATION_OPTION);\n            for (var key in classifications) {\n                if (classifications.hasOwnProperty(key)) {\n                    var classification = classifications[key];\n                    ret.push({\n                        label: classification.name,\n                        key: classification.code\n                    });\n                }\n            }\n        }\n        return ret;\n    };\n    ContinuousScrollList.prototype.calcFilter = function (props) {\n        var customFields = props.customFields, queryParamsEnabled = props.queryParamsEnabled;\n        this.displayFilter = customFields && customFields.displayFilter && queryParamsEnabled;\n    };\n    ContinuousScrollList.prototype.render = function () {\n        var _this = this;\n        var list = this.state.list;\n        var hasItems = list.size > 0 || list.size === -1;\n        var filters = this.renderFilterSortDropDowns();\n        var prevRow = this.context.focusNav.getPrevFocusableRow(this.focusableRow.index);\n        var hasHeader = prevRow && prevRow.template && prevRow.template.startsWith('LH');\n        var style = {\n            minHeight: this.focusableRow.maxHeight + 'px',\n            marginTop: !filters && hasHeader && list.description ? ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_14__[/* default */ \"a\"].csListMarginTop + 'px' : undefined\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](\"div\", { className: bem.b(), ref: function (ref) { return (_this.ref = ref); }, onMouseEnter: this.handleMouseEnter, style: style },\n            list.size !== -1 && filters,\n            hasItems ? this.renderList() : this.renderFilterMismatch()));\n    };\n    ContinuousScrollList.prototype.renderFilterSortDropDowns = function () {\n        // We don't yet fully support sort/filter when embedding a continuous scroll list\n        // inside a non-list detail page as we need to maintain the sort/filter state\n        // in storage and not query parameters. For now we don't present the sort/filter\n        // options unless 'queryParamsEnabled' is true along with 'displayFilter'\n        if (!this.displayFilter)\n            return false;\n        // Note: Disabling filters for all scroll list pages across apps\n        return false;\n        var classificationOptions = this.classificationOptions;\n        var _a = this.state, selectedClassification = _a.selectedClassification, selectedSort = _a.selectedSort, isFocused = _a.isFocused, focusState = _a.focusState;\n        var filterBtnClass = isFocused && focusState === 'filter' ? \"\".concat(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_10__[/* focusedClass */ \"a\"], \" \").concat(bem.e('drop-down-btn')) : \"\".concat(bem.e('drop-down-btn'));\n        var sortBtnClass = isFocused && focusState === 'sort' ? \"\".concat(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_10__[/* focusedClass */ \"a\"], \" \").concat(bem.e('drop-down-btn')) : \"\".concat(bem.e('drop-down-btn'));\n        return (react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](\"div\", { className: bem.e('drop-down-container') },\n            react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_DropButton__WEBPACK_IMPORTED_MODULE_7__[/* DropButton */ \"a\"], { className: filterBtnClass, label: 'listPage_filter_rating', selectedKey: selectedClassification, defaultOption: DEFAULT_CLASSIFICATION_OPTION, options: classificationOptions, dropBtnState: 'filter', onMouseEnter: this.mouseEnterDropBtn, onClick: this.handleClick }),\n            react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_DropButton__WEBPACK_IMPORTED_MODULE_7__[/* DropButton */ \"a\"], { className: sortBtnClass, label: 'listPage_sort', selectedKey: selectedSort, defaultOption: DEFAULT_SORT_OPTION, options: SORT_OPTIONS, dropBtnState: 'sort', onMouseEnter: this.mouseEnterDropBtn, onClick: this.handleClick })));\n    };\n    ContinuousScrollList.prototype.renderList = function () {\n        var _this = this;\n        var _a;\n        var _b = this.props, list = _b.list, rowType = _b.rowType, profile = _b.profile, imageType = _b.imageType, itemMargin = _b.itemMargin, imageWidth = _b.imageWidth, itemsPerRow = _b.itemsPerRow, customFields = _b.customFields, isTrailersListPage = _b.isTrailersListPage, isEpisodesListPage = _b.isEpisodesListPage, showEpisodeMetadata = _b.showEpisodeMetadata, isAccountWatchedHistoryPage = _b.isAccountWatchedHistoryPage, isAccountContinueWatchingPage = _b.isAccountContinueWatchingPage;\n        var _c = this.state, isFocused = _c.isFocused, focusState = _c.focusState, selectedIndex = _c.selectedIndex;\n        if (this.state.focusState === 'clear') {\n            setImmediate(function () {\n                _this.setState({ focusState: 'list' });\n            });\n        }\n        var itemsFocused = isFocused && focusState === 'list';\n        var itemProps = {\n            imageType: imageType,\n            imageOptions: { width: imageWidth },\n            itemMargin: itemMargin || ITEM_MARGIN,\n            titlePosition: customFields && customFields.assetTitlePosition,\n            className: bem.e('grid-item'),\n            onClick: this.invokeItem,\n            assetMouseEnter: this.mouseEnterAsset,\n            displayPlayIcon: customFields && customFields.displayPlayIcon,\n            showEpisodeMetadata: showEpisodeMetadata,\n            rowType: rowType\n        };\n        var watchedList = (_a = profile === null || profile === void 0 ? void 0 : profile.info) === null || _a === void 0 ? void 0 : _a.watched;\n        return (react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](\"div\", { className: bem.e('grid') }, this.rows.map(function (items, index) { return (react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_pageEntry_continuous_ContinuousScrollListRow__WEBPACK_IMPORTED_MODULE_17__[/* default */ \"a\"], { list: list, items: items, enableItemGrid: true, key: 'row-' + index, itemProps: itemProps, height: _this.itemHeight, isFocused: itemsFocused, itemsPerRow: itemsPerRow, watchedList: watchedList, offset: index * itemsPerRow, selectedIndex: selectedIndex, isEpisodesListPage: isEpisodesListPage, showTrailerMetadata: isTrailersListPage, isAccountWatchedHistoryPage: isAccountWatchedHistoryPage, additionalMetadata: isTrailersListPage || isEpisodesListPage, isAccountContinueWatchingPage: isAccountContinueWatchingPage })); })));\n    };\n    ContinuousScrollList.prototype.renderFilterMismatch = function () {\n        var _a = this.state, isFocused = _a.isFocused, focusState = _a.focusState;\n        var btnClassName = isFocused && focusState === 'clear' ? 'clear-list-filters-btn focused' : 'clear-list-filters-btn';\n        return (react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](\"div\", null,\n            react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"], { tagName: \"div\", className: \"page-entry page-entry--empty\" }, \"@{listPage_filter_mismatch_msg|Sorry, no items match your selected filter.}\"),\n            react__WEBPACK_IMPORTED_MODULE_1__[\"createElement\"](ref_tv_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_4__[/* default */ \"a\"], { tagName: \"button\", className: btnClassName, onClick: this.resetFilters, onMouseEnter: this.mouseEnterClearBtn }, \"@{listPage_filter_reset_label|Clear Filters}\")));\n    };\n    ContinuousScrollList.contextTypes = {\n        router: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"object\"].isRequired,\n        focusNav: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"object\"].isRequired,\n        detailHelper: prop_types__WEBPACK_IMPORTED_MODULE_2__[\"object\"].isRequired\n    };\n    ContinuousScrollList.defaultProps = {\n        autoFocus: true\n    };\n    return ContinuousScrollList;\n}(react__WEBPACK_IMPORTED_MODULE_1__[\"Component\"]));\nfunction mapDispatchToProps(dispatch) {\n    if (!dispatch.page || !dispatch.page.history) {\n        return {\n            refreshPage: function () { return dispatch(Object(shared_page_pageWorkflow__WEBPACK_IMPORTED_MODULE_12__[/* refreshPage */ \"h\"])()); },\n            restorePage: function (loading) { return dispatch(Object(shared_page_pageWorkflow__WEBPACK_IMPORTED_MODULE_12__[/* restorePage */ \"i\"])(loading)); }\n        };\n    }\n    var location = dispatch.page.history.location;\n    var selectedSort, selectedClassification;\n    if (location && location.query) {\n        selectedSort = location.query['order'];\n        selectedClassification = location.query['max_rating'];\n    }\n    if (!selectedSort)\n        selectedSort = DEFAULT_SORT_OPTION.key;\n    if (!selectedClassification)\n        selectedClassification = DEFAULT_CLASSIFICATION_OPTION.key;\n    this.setState({\n        selectedSort: selectedSort,\n        selectedClassification: selectedClassification\n    });\n    return {\n        selectedSort: selectedSort,\n        selectedClassification: selectedClassification,\n        refreshPage: function () { return dispatch(Object(shared_page_pageWorkflow__WEBPACK_IMPORTED_MODULE_12__[/* refreshPage */ \"h\"])()); },\n        restorePage: function (loading) { return dispatch(Object(shared_page_pageWorkflow__WEBPACK_IMPORTED_MODULE_12__[/* restorePage */ \"i\"])(loading)); }\n    };\n}\n/* harmony default export */ __webpack_exports__[\"a\"] = (Object(react_redux__WEBPACK_IMPORTED_MODULE_3__[\"connect\"])(undefined, mapDispatchToProps)(ContinuousScrollList));\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(294).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///307\n")},399:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(245);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var shared_util_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(244);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(247);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_4___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_4__);\n/* harmony import */ var ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(249);\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(255);\n/* harmony import */ var _IntlFormatter__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(252);\n/* harmony import */ var ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(246);\n/* harmony import */ var _TitledListModal_scss__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(400);\n/* harmony import */ var _TitledListModal_scss__WEBPACK_IMPORTED_MODULE_9___default = /*#__PURE__*/__webpack_require__.n(_TitledListModal_scss__WEBPACK_IMPORTED_MODULE_9__);\n\n\n\n\n\n\n\n\n\n\nvar bem = new shared_util_styles__WEBPACK_IMPORTED_MODULE_3__[/* Bem */ "a"](\'titled-list\');\nvar TitledListModal = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "c"])(TitledListModal, _super);\n    function TitledListModal(props) {\n        var _this = _super.call(this, props) || this;\n        _this.setFocus = function (isFocused) {\n            return true;\n        };\n        _this.moveUp = function () {\n            var curIndex = Object(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* wrapValue */ "g"])(_this.state.curIndex - 1, 0, _this.state.maxIndex);\n            var portraitPosition = _this.calcPortraitPosition(curIndex);\n            _this.setState({ curIndex: curIndex, portraitPosition: portraitPosition });\n            return true;\n        };\n        _this.moveDown = function () {\n            var curIndex = Object(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* wrapValue */ "g"])(_this.state.curIndex + 1, 0, _this.state.maxIndex);\n            var portraitPosition = _this.calcPortraitPosition(curIndex);\n            _this.setState({ curIndex: curIndex, portraitPosition: portraitPosition });\n            return true;\n        };\n        _this.exec = function (act) {\n            switch (act) {\n                case \'click\':\n                    var onItemClicked = _this.props.onItemClicked;\n                    var curIndex = _this.state.curIndex;\n                    if (onItemClicked)\n                        onItemClicked(curIndex);\n                    return true;\n                default:\n                    break;\n            }\n            return false;\n        };\n        _this.onItemsRef = function (ref) {\n            _this.itemsRef = ref;\n        };\n        _this.calcPortraitPosition = function (curIndex) {\n            var entries = _this.props.entries;\n            var portraitPosition = \'0%\';\n            var entriesPerPage = 6;\n            var totalEntries = entries.length;\n            var totalPages = Math.ceil(totalEntries / entriesPerPage);\n            var currentPage = Math.floor(curIndex / entriesPerPage);\n            if (currentPage > 0) {\n                if (currentPage < totalPages - 1) {\n                    portraitPosition = -100 * currentPage + \'%\';\n                }\n                else {\n                    if (_this.itemsRef) {\n                        portraitPosition =\n                            (-(_this.itemsRef.scrollHeight - _this.itemsRef.clientHeight) / _this.itemsRef.clientHeight) * 100 + \'%\';\n                    }\n                }\n            }\n            return portraitPosition;\n        };\n        var curIndex = props.selectedKey && props.entries.findIndex(function (e) { return e.key === props.selectedKey; });\n        _this.state = {\n            curIndex: curIndex !== -1 && curIndex !== undefined ? curIndex : 0,\n            isVisible: false,\n            maxIndex: props.entries.length - 1,\n            portraitPosition: \'0%\'\n        };\n        _this.focusableRow = {\n            focusable: true,\n            index: -1,\n            height: 0,\n            ref: undefined,\n            restoreSavedState: function () { },\n            setFocus: _this.setFocus,\n            moveLeft: ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* stopMove */ "e"],\n            moveRight: ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* stopMove */ "e"],\n            moveUp: _this.moveUp,\n            moveDown: _this.moveDown,\n            exec: _this.exec\n        };\n        return _this;\n    }\n    TitledListModal.prototype.componentDidMount = function () {\n        var portraitPosition = this.calcPortraitPosition(this.state.curIndex);\n        this.setState({ portraitPosition: portraitPosition });\n    };\n    TitledListModal.prototype.componentWillReceiveProps = function (nextProps) {\n        if (nextProps.isVisible !== undefined && this.state.isVisible !== nextProps.isVisible) {\n            this.setState({ isVisible: nextProps.isVisible });\n            if (nextProps.isVisible) {\n                this.context.focusNav.setFocus(this.focusableRow);\n            }\n            else {\n                this.context.focusNav.resetFocus();\n            }\n        }\n        if (nextProps.entries)\n            this.setState({ maxIndex: nextProps.entries.length - 1 });\n    };\n    TitledListModal.prototype.componentDidUpdate = function () {\n        this.focusableRow.savedState = Object.assign({}, this.state);\n    };\n    TitledListModal.prototype.render = function () {\n        var _a = this.props, title = _a.title, entries = _a.entries, onItemClicked = _a.onItemClicked, needLocalization = _a.needLocalization;\n        var _b = this.state, curIndex = _b.curIndex, portraitPosition = _b.portraitPosition;\n        var styleTransform = Object(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* transform */ "f"])("-50%, ".concat(portraitPosition), ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_8__[/* default */ "a"].transitionDuration, 0, false);\n        var sortFilterItems = {\n            styleTransform: styleTransform,\n            entries: entries,\n            curIndex: curIndex,\n            onItemClicked: onItemClicked,\n            needLocalization: needLocalization\n        };\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.b() },\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'titleDiv\') },\n                react__WEBPACK_IMPORTED_MODULE_1__["createElement"](_IntlFormatter__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"], { tagName: "div", className: bem.e(\'title\') }, title)),\n            this.renderSortFilterDialog(sortFilterItems),\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'cover\') })));\n    };\n    TitledListModal.prototype.renderSortFilterDialog = function (sortFilterItems) {\n        var _this = this;\n        var styleTransform = sortFilterItems.styleTransform, entries = sortFilterItems.entries, curIndex = sortFilterItems.curIndex, onItemClicked = sortFilterItems.onItemClicked, needLocalization = sortFilterItems.needLocalization;\n        if (needLocalization) {\n            return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'items\'), style: styleTransform, ref: this.onItemsRef }, entries &&\n                entries.map(function (item, i) {\n                    return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"](react_intl__WEBPACK_IMPORTED_MODULE_6__[/* FormattedMessage */ "a"], { id: item.label, key: "item-".concat(i) }, function (value) { return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: classnames__WEBPACK_IMPORTED_MODULE_4___default()(bem.e(\'item\'), curIndex === i ? ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* focusedClass */ "a"] : \'\'), onMouseEnter: function () {\n                            _this.setState({\n                                curIndex: i\n                            });\n                        }, onClick: function () {\n                            onItemClicked(i);\n                        } }, value)); }));\n                })));\n        }\n        else {\n            return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'items\'), style: styleTransform, ref: this.onItemsRef }, entries &&\n                entries.map(function (item, i) {\n                    return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { key: "item-".concat(i), className: classnames__WEBPACK_IMPORTED_MODULE_4___default()(bem.e(\'item\'), curIndex === i ? ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_5__[/* focusedClass */ "a"] : \'\'), onMouseEnter: function () {\n                            _this.setState({\n                                curIndex: i\n                            });\n                        }, onClick: function () {\n                            onItemClicked(i);\n                        } }, item.label));\n                })));\n        }\n    };\n    TitledListModal.contextTypes = {\n        focusNav: prop_types__WEBPACK_IMPORTED_MODULE_2__["object"].isRequired\n    };\n    TitledListModal.defaultProps = {\n        isVisible: false\n    };\n    return TitledListModal;\n}(react__WEBPACK_IMPORTED_MODULE_1__["Component"]));\n/* harmony default export */ __webpack_exports__["a"] = (TitledListModal);\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///399\n')},400:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWYvdHYvY29tcG9uZW50L21vZGFsL1RpdGxlZExpc3RNb2RhbC5zY3NzPzZkMDUiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiNDAwLmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///400\n")},516:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var react_intl__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(255);\n\n\n\n/**\n * react-intl formatter (using react-intl injectIntl and formatMessage)\n *\n * Use this to format multiple labels at the same time\n *\n * Example:\n * <IntlFormatter elementType="p">\n * \t{"@{message_id|defaultMessage} 1234 @{message_id2|defaultMessage} 5678"}\n * </IntlFormatter>\n *\n * Renders:\n *\n * <p>\n * \tformattedMessage 1234 formattedMessage2 5678\n * </p>\n *\n * For aria-label\n * <IntlFormatter\n * \telementType="button"\n * \tformattedProps={{ \'aria-label\': \'@{message_id|defaultMessage}\' }}\n * >\n * \t<SVGIconPath />\n * </IntlFormatter>\n *\n * Renders:\n *\n * <button aria-label="formatted message">\n * \t<SVGIconPath />\n * </button>\n *\n * By default, it uses <span> as the elementType\n */\nvar IntlFormatter = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "c"])(IntlFormatter, _super);\n    function IntlFormatter(props) {\n        var _this = _super.call(this, props) || this;\n        _this.formatMessage = function (message) {\n            return message.replace(/@\\{([^@]+)\\}/g, _this.getFormattedMessage);\n        };\n        _this.getFormattedMessage = function (match, p1) {\n            var _a = _this.props, intl = _a.intl, defaults = _a.defaults;\n            var _b = p1.split(\'|\'), id = _b[0], defaultMessage = _b[1];\n            if (!defaultMessage && defaults)\n                defaultMessage = defaults[id];\n            return intl.formatMessage({ id: id, defaultMessage: defaultMessage }, _this.state.values);\n        };\n        _this.formatChildren = function (children) {\n            if (typeof children === \'string\') {\n                return _this.formatMessage(children);\n            }\n            else if (typeof children === \'object\' && Array.isArray(children)) {\n                return children.map(_this.formatChild);\n            }\n            return children;\n        };\n        _this.formatChild = function (child) {\n            if (typeof child === \'string\') {\n                return _this.formatMessage(child);\n            }\n            else if (_this.props.nested && typeof child === \'object\') {\n                return react__WEBPACK_IMPORTED_MODULE_1__["cloneElement"](child, {\n                    children: _this.formatChildren(child.props.children)\n                });\n            }\n            return child;\n        };\n        _this.state = {\n            values: _this.formatValues(props.values, props.intl)\n        };\n        return _this;\n    }\n    IntlFormatter.prototype.componentWillReceiveProps = function (nextProps) {\n        var _a = this.props, values = _a.values, intl = _a.intl;\n        if (nextProps.values !== values || intl.locale !== nextProps.intl.locale) {\n            this.setState({ values: this.formatValues(nextProps.values, nextProps.intl) });\n        }\n    };\n    IntlFormatter.prototype.formatValues = function (values, intl) {\n        if (!values)\n            return undefined;\n        var formattedValues = {};\n        for (var key in values) {\n            var value = values[key];\n            if (!value || typeof value !== \'object\' || value instanceof Date) {\n                formattedValues[key] = value;\n            }\n            else {\n                formattedValues[key] = this.getFormattedValue(values[key], intl);\n            }\n        }\n        return formattedValues;\n    };\n    IntlFormatter.prototype.getFormattedValue = function (_a, intl) {\n        var type = _a.type, value = _a.value, formatOptions = _a.formatOptions;\n        switch (type) {\n            case \'date\':\n                return intl.formatDate(value, formatOptions);\n            case \'time\':\n                return intl.formatTime(value, formatOptions);\n            case \'relative\':\n                return intl.formatRelative(value, formatOptions);\n            case \'number\':\n                return intl.formatNumber(value, formatOptions);\n            case \'plural\':\n                return intl.formatPlural(value, formatOptions);\n            default:\n                return value;\n        }\n    };\n    IntlFormatter.prototype.render = function () {\n        // tslint:disable:no-unused-variable\n        var _a = this.props, intl = _a.intl, values = _a.values, defaults = _a.defaults, formattedProps = _a.formattedProps, elementType = _a.elementType, tagName = _a.tagName, componentProps = _a.componentProps, children = _a.children, nested = _a.nested, others = Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __rest */ "e"])(_a, ["intl", "values", "defaults", "formattedProps", "elementType", "tagName", "componentProps", "children", "nested"]);\n        // tslint:enable\n        if (children) {\n            others[\'children\'] = this.formatChildren(children);\n        }\n        if (formattedProps) {\n            for (var propName in formattedProps) {\n                if (formattedProps[propName] === undefined)\n                    continue;\n                others[propName] = this.formatMessage(formattedProps[propName]);\n            }\n        }\n        if (typeof elementType === \'string\') {\n            return react__WEBPACK_IMPORTED_MODULE_1__["createElement"](elementType, others);\n        }\n        else if (!elementType && tagName) {\n            return react__WEBPACK_IMPORTED_MODULE_1__["createElement"](tagName, others);\n        }\n        var ComponentClass = elementType;\n        var componentChildren = others[\'children\'];\n        delete others[\'children\'];\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"](ComponentClass, Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __assign */ "a"])({}, others, componentProps), componentChildren));\n    };\n    IntlFormatter.defaultProps = {\n        // When we eventually remove `tagName` this default should be replaced with `elementType`.\n        tagName: \'span\'\n    };\n    return IntlFormatter;\n}(react__WEBPACK_IMPORTED_MODULE_1__["PureComponent"]));\n/* harmony default export */ __webpack_exports__["a"] = (Object(react_intl__WEBPACK_IMPORTED_MODULE_2__[/* injectIntl */ "d"])(IntlFormatter));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///516\n')},945:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "b", function() { return PLACEHOLDER_KEY; });\n/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "a", function() { return DropButton; });\n/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(247);\n/* harmony import */ var classnames__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(classnames__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var shared_util_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(244);\n/* harmony import */ var ref_responsive_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(516);\n/* harmony import */ var _DropButton_scss__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(946);\n/* harmony import */ var _DropButton_scss__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(_DropButton_scss__WEBPACK_IMPORTED_MODULE_5__);\n\n\n\n\n\n\nvar bem = new shared_util_styles__WEBPACK_IMPORTED_MODULE_3__[/* Bem */ "a"](\'drop-button\');\nvar PLACEHOLDER_KEY = \'__placeholder\';\nvar DropButton = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "c"])(DropButton, _super);\n    function DropButton(props) {\n        var _this = _super.call(this, props) || this;\n        _this.handleMouseEnter = function () {\n            var _a = _this.props, onMouseEnter = _a.onMouseEnter, dropBtnState = _a.dropBtnState;\n            onMouseEnter && onMouseEnter(dropBtnState);\n        };\n        _this.handleMouseClick = function () {\n            var _a = _this.props, onClick = _a.onClick, dropBtnState = _a.dropBtnState;\n            onClick && onClick(dropBtnState);\n        };\n        return _this;\n    }\n    DropButton.prototype.getSelectedLabel = function (props) {\n        var options = props.options, selectedKey = props.selectedKey, defaultOption = props.defaultOption;\n        var option = selectedKey && selectedKey !== defaultOption.key && options.find(function (o) { return o.key === selectedKey; });\n        return option ? option.label : props.label;\n    };\n    DropButton.prototype.render = function () {\n        var _a = this.props, className = _a.className, curIndex = _a.curIndex, options = _a.options;\n        var label = \'\';\n        if (curIndex !== undefined) {\n            label = options[curIndex].label;\n        }\n        else {\n            label = this.getSelectedLabel(this.props);\n        }\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(bem.b(), className), onMouseEnter: this.handleMouseEnter, onClick: this.handleMouseClick },\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'btn\') },\n                react__WEBPACK_IMPORTED_MODULE_1__["createElement"](ref_responsive_component_IntlFormatter__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"], { elementType: "span", className: bem.e(\'title\') }, "@{".concat(label, "}")),\n                react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("i", { className: classnames__WEBPACK_IMPORTED_MODULE_2___default()(bem.e(\'icon\'), \'icon icon-drop-button\') })),\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.e(\'bar\') })));\n    };\n    DropButton.defaultProps = {\n        useTranslations: false\n    };\n    return DropButton;\n}(react__WEBPACK_IMPORTED_MODULE_1__["Component"]));\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWYvdHYvY29tcG9uZW50L0Ryb3BCdXR0b24udHN4P2Q1NTgiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7O0FBQStCO0FBQ0g7QUFDYTtBQUMwQjtBQUN4QztBQTZCM0IsSUFBTSxHQUFHLEdBQUcsSUFBSSw4REFBRyxDQUFDLGFBQWEsQ0FBQyxDQUFDO0FBRTVCLElBQU0sZUFBZSxHQUFHLGVBQWUsQ0FBQztBQUUvQztJQUFnQyxvRkFBaUQ7SUFLaEYsb0JBQVksS0FBSztRQUFqQixZQUNDLGtCQUFNLEtBQUssQ0FBQyxTQUNaO1FBUU8sc0JBQWdCLEdBQUc7WUFDcEIsU0FBaUMsS0FBSSxDQUFDLEtBQUssRUFBekMsWUFBWSxvQkFBRSxZQUFZLGtCQUFlLENBQUM7WUFDbEQsWUFBWSxJQUFJLFlBQVksQ0FBQyxZQUFZLENBQUMsQ0FBQztRQUM1QyxDQUFDLENBQUM7UUFFTSxzQkFBZ0IsR0FBRztZQUNwQixTQUE0QixLQUFJLENBQUMsS0FBSyxFQUFwQyxPQUFPLGVBQUUsWUFBWSxrQkFBZSxDQUFDO1lBQzdDLE9BQU8sSUFBSSxPQUFPLENBQUMsWUFBWSxDQUFDLENBQUM7UUFDbEMsQ0FBQyxDQUFDOztJQWhCRixDQUFDO0lBRU8scUNBQWdCLEdBQXhCLFVBQXlCLEtBQXNCO1FBQ3RDLFdBQU8sR0FBaUMsS0FBSyxRQUF0QyxFQUFFLFdBQVcsR0FBb0IsS0FBSyxZQUF6QixFQUFFLGFBQWEsR0FBSyxLQUFLLGNBQVYsQ0FBVztRQUN0RCxJQUFNLE1BQU0sR0FBRyxXQUFXLElBQUksV0FBVyxLQUFLLGFBQWEsQ0FBQyxHQUFHLElBQUksT0FBTyxDQUFDLElBQUksQ0FBQyxXQUFDLElBQUksUUFBQyxDQUFDLEdBQUcsS0FBSyxXQUFXLEVBQXJCLENBQXFCLENBQUMsQ0FBQztRQUM1RyxPQUFPLE1BQU0sQ0FBQyxDQUFDLENBQUMsTUFBTSxDQUFDLEtBQUssQ0FBQyxDQUFDLENBQUMsS0FBSyxDQUFDLEtBQUssQ0FBQztJQUM1QyxDQUFDO0lBWUQsMkJBQU0sR0FBTjtRQUNPLFNBQW1DLElBQUksQ0FBQyxLQUFLLEVBQTNDLFNBQVMsaUJBQUUsUUFBUSxnQkFBRSxPQUFPLGFBQWUsQ0FBQztRQUVwRCxJQUFJLEtBQUssR0FBRyxFQUFFLENBQUM7UUFDZixJQUFJLFFBQVEsS0FBSyxTQUFTLEVBQUU7WUFDM0IsS0FBSyxHQUFHLE9BQU8sQ0FBQyxRQUFRLENBQUMsQ0FBQyxLQUFLLENBQUM7U0FDaEM7YUFBTTtZQUNOLEtBQUssR0FBRyxJQUFJLENBQUMsZ0JBQWdCLENBQUMsSUFBSSxDQUFDLEtBQUssQ0FBQyxDQUFDO1NBQzFDO1FBRUQsT0FBTyxDQUNOLDZEQUFLLFNBQVMsRUFBRSxpREFBRSxDQUFDLEdBQUcsQ0FBQyxDQUFDLEVBQUUsRUFBRSxTQUFTLENBQUMsRUFBRSxZQUFZLEVBQUUsSUFBSSxDQUFDLGdCQUFnQixFQUFFLE9BQU8sRUFBRSxJQUFJLENBQUMsZ0JBQWdCO1lBQzFHLDZEQUFLLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLEtBQUssQ0FBQztnQkFDM0Isb0RBQUMsc0ZBQWEsSUFBQyxXQUFXLEVBQUMsTUFBTSxFQUFDLFNBQVMsRUFBRSxHQUFHLENBQUMsQ0FBQyxDQUFDLE9BQU8sQ0FBQyxJQUN6RCxZQUFLLEtBQUssTUFBRyxDQUNDO2dCQUVoQiwyREFBRyxTQUFTLEVBQUUsaURBQUUsQ0FBQyxHQUFHLENBQUMsQ0FBQyxDQUFDLE1BQU0sQ0FBQyxFQUFFLHVCQUF1QixDQUFDLEdBQUksQ0FDdkQ7WUFDTiw2REFBSyxTQUFTLEVBQUUsR0FBRyxDQUFDLENBQUMsQ0FBQyxLQUFLLENBQUMsR0FBSSxDQUMzQixDQUNOLENBQUM7SUFDSCxDQUFDO0lBOUNNLHVCQUFZLEdBQUc7UUFDckIsZUFBZSxFQUFFLEtBQUs7S0FDdEIsQ0FBQztJQTZDSCxpQkFBQztDQUFBLENBaEQrQiwrQ0FBZSxHQWdEOUM7QUFoRHNCIiwiZmlsZSI6Ijk0NS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCAqIGFzIFJlYWN0IGZyb20gJ3JlYWN0JztcbmltcG9ydCBjeCBmcm9tICdjbGFzc25hbWVzJztcbmltcG9ydCB7IEJlbSB9IGZyb20gJ3NoYXJlZC91dGlsL3N0eWxlcyc7XG5pbXBvcnQgSW50bEZvcm1hdHRlciBmcm9tICdyZWYvcmVzcG9uc2l2ZS9jb21wb25lbnQvSW50bEZvcm1hdHRlcic7XG5pbXBvcnQgJy4vRHJvcEJ1dHRvbi5zY3NzJztcblxuLyoqXG4gKiBEcm9wIGRvd24gb3B0aW9uXG4gKlxuICogQHBhcmFtIHtzdHJpbmd9IGxhYmVsIExhYmVsIGRpc3BsYXllZCB0byB0aGUgdXNlciBmb3IgYSBkcm9wIGRvd24gb3B0aW9uLlxuICogXHRcdFx0XHRcdFx0IFRoaXMgY2FuIGJlIGh1bWFuIHJlYWRhYmxlIG9yIGlmIHVzZWQgaW4gY29uanVuY3Rpb24gd2l0aCB1c2VUcmFuc2xhdGlvbnNcbiAqIFx0XHRcdFx0XHRcdCBvbiB0aGUgcGFyZW50IGRyb3AgZG93biB3aWxsIHVzZSBJbnRsRm9ybWF0dGVyIHRvIGRpc3BsYXkgYSBsb2NhbGl6ZWQgdmFsdWVcbiAqIEBwYXJhbSB7c3RyaW5nfSBrZXkgS2V5IGFzc29jaWF0ZWQgd2l0aCB0aGUgZHJvcCBkb3duIG9wdGlvbi4gVGhpcyB3aWxsIG5vdCBiZSBkaXJlY3RseSBzaG93biB0byB0aGUgdXNlci5cbiAqL1xuZXhwb3J0IGludGVyZmFjZSBEcm9wQnV0dG9uT3B0aW9uIHtcblx0bGFiZWw6IHN0cmluZztcblx0a2V5OiBzdHJpbmc7XG59XG5cbmV4cG9ydCBpbnRlcmZhY2UgRHJvcEJ1dHRvblByb3BzIHtcblx0bGFiZWw/OiBzdHJpbmc7XG5cdGNsYXNzTmFtZT86IHN0cmluZztcblx0Y3VySW5kZXg/OiBudW1iZXI7XG5cdHNlbGVjdGVkS2V5Pzogc3RyaW5nO1xuXHRkZWZhdWx0T3B0aW9uPzogRHJvcEJ1dHRvbk9wdGlvbjtcblx0b3B0aW9ucz86IERyb3BCdXR0b25PcHRpb25bXTtcblx0b25Nb3VzZUVudGVyPzogKGZvY3VzU3RhdGU/OiBzdHJpbmcpID0+IHZvaWQ7XG5cdG9uQ2xpY2s/OiAoZm9jdXNTdGF0ZT86IHN0cmluZykgPT4gdm9pZDtcblx0ZHJvcEJ0blN0YXRlPzogc3RyaW5nO1xufVxuXG5leHBvcnQgaW50ZXJmYWNlIERyb3BCdXR0b25TdGF0ZSB7fVxuXG5jb25zdCBiZW0gPSBuZXcgQmVtKCdkcm9wLWJ1dHRvbicpO1xuXG5leHBvcnQgY29uc3QgUExBQ0VIT0xERVJfS0VZID0gJ19fcGxhY2Vob2xkZXInO1xuXG5leHBvcnQgY2xhc3MgRHJvcEJ1dHRvbiBleHRlbmRzIFJlYWN0LkNvbXBvbmVudDxEcm9wQnV0dG9uUHJvcHMsIERyb3BCdXR0b25TdGF0ZT4ge1xuXHRzdGF0aWMgZGVmYXVsdFByb3BzID0ge1xuXHRcdHVzZVRyYW5zbGF0aW9uczogZmFsc2Vcblx0fTtcblxuXHRjb25zdHJ1Y3Rvcihwcm9wcykge1xuXHRcdHN1cGVyKHByb3BzKTtcblx0fVxuXG5cdHByaXZhdGUgZ2V0U2VsZWN0ZWRMYWJlbChwcm9wczogRHJvcEJ1dHRvblByb3BzKTogc3RyaW5nIHtcblx0XHRjb25zdCB7IG9wdGlvbnMsIHNlbGVjdGVkS2V5LCBkZWZhdWx0T3B0aW9uIH0gPSBwcm9wcztcblx0XHRjb25zdCBvcHRpb24gPSBzZWxlY3RlZEtleSAmJiBzZWxlY3RlZEtleSAhPT0gZGVmYXVsdE9wdGlvbi5rZXkgJiYgb3B0aW9ucy5maW5kKG8gPT4gby5rZXkgPT09IHNlbGVjdGVkS2V5KTtcblx0XHRyZXR1cm4gb3B0aW9uID8gb3B0aW9uLmxhYmVsIDogcHJvcHMubGFiZWw7XG5cdH1cblxuXHRwcml2YXRlIGhhbmRsZU1vdXNlRW50ZXIgPSAoKSA9PiB7XG5cdFx0Y29uc3QgeyBvbk1vdXNlRW50ZXIsIGRyb3BCdG5TdGF0ZSB9ID0gdGhpcy5wcm9wcztcblx0XHRvbk1vdXNlRW50ZXIgJiYgb25Nb3VzZUVudGVyKGRyb3BCdG5TdGF0ZSk7XG5cdH07XG5cblx0cHJpdmF0ZSBoYW5kbGVNb3VzZUNsaWNrID0gKCkgPT4ge1xuXHRcdGNvbnN0IHsgb25DbGljaywgZHJvcEJ0blN0YXRlIH0gPSB0aGlzLnByb3BzO1xuXHRcdG9uQ2xpY2sgJiYgb25DbGljayhkcm9wQnRuU3RhdGUpO1xuXHR9O1xuXG5cdHJlbmRlcigpIHtcblx0XHRjb25zdCB7IGNsYXNzTmFtZSwgY3VySW5kZXgsIG9wdGlvbnMgfSA9IHRoaXMucHJvcHM7XG5cblx0XHRsZXQgbGFiZWwgPSAnJztcblx0XHRpZiAoY3VySW5kZXggIT09IHVuZGVmaW5lZCkge1xuXHRcdFx0bGFiZWwgPSBvcHRpb25zW2N1ckluZGV4XS5sYWJlbDtcblx0XHR9IGVsc2Uge1xuXHRcdFx0bGFiZWwgPSB0aGlzLmdldFNlbGVjdGVkTGFiZWwodGhpcy5wcm9wcyk7XG5cdFx0fVxuXG5cdFx0cmV0dXJuIChcblx0XHRcdDxkaXYgY2xhc3NOYW1lPXtjeChiZW0uYigpLCBjbGFzc05hbWUpfSBvbk1vdXNlRW50ZXI9e3RoaXMuaGFuZGxlTW91c2VFbnRlcn0gb25DbGljaz17dGhpcy5oYW5kbGVNb3VzZUNsaWNrfT5cblx0XHRcdFx0PGRpdiBjbGFzc05hbWU9e2JlbS5lKCdidG4nKX0+XG5cdFx0XHRcdFx0PEludGxGb3JtYXR0ZXIgZWxlbWVudFR5cGU9XCJzcGFuXCIgY2xhc3NOYW1lPXtiZW0uZSgndGl0bGUnKX0+XG5cdFx0XHRcdFx0XHR7YEB7JHtsYWJlbH19YH1cblx0XHRcdFx0XHQ8L0ludGxGb3JtYXR0ZXI+XG5cblx0XHRcdFx0XHQ8aSBjbGFzc05hbWU9e2N4KGJlbS5lKCdpY29uJyksICdpY29uIGljb24tZHJvcC1idXR0b24nKX0gLz5cblx0XHRcdFx0PC9kaXY+XG5cdFx0XHRcdDxkaXYgY2xhc3NOYW1lPXtiZW0uZSgnYmFyJyl9IC8+XG5cdFx0XHQ8L2Rpdj5cblx0XHQpO1xuXHR9XG59XG4iXSwic291cmNlUm9vdCI6IiJ9\n//# sourceURL=webpack-internal:///945\n')},946:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWYvdHYvY29tcG9uZW50L0Ryb3BCdXR0b24uc2Nzcz81NWRiIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijk0Ni5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///946\n")},947:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9yZWYvdHYvcGFnZUVudHJ5L2NvbnRpbnVvdXMvQ29udGludW91c1Njcm9sbExpc3Quc2Nzcz84NmY3Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijk0Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///947\n")}}]);