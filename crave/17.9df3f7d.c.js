(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{1069:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('// ESM COMPAT FLAG\n__webpack_require__.r(__webpack_exports__);\n\n// EXTERNAL MODULE: ../node_modules/tslib/tslib.es6.js\nvar tslib_es6 = __webpack_require__(242);\n\n// EXTERNAL MODULE: ../node_modules/react/index.js\nvar react = __webpack_require__(243);\n\n// EXTERNAL MODULE: ../node_modules/prop-types/index.js\nvar prop_types = __webpack_require__(245);\n\n// EXTERNAL MODULE: ../node_modules/classnames/index.js\nvar classnames = __webpack_require__(247);\nvar classnames_default = /*#__PURE__*/__webpack_require__.n(classnames);\n\n// EXTERNAL MODULE: ../node_modules/react-intl/lib/index.es.js + 1 modules\nvar index_es = __webpack_require__(255);\n\n// EXTERNAL MODULE: ./shared/util/platforms/ps4/ps4DeviceModel.ts + 1 modules\nvar ps4DeviceModel = __webpack_require__(260);\n\n// EXTERNAL MODULE: ./crave/tv/page/search/InputWithOSK.tsx\nvar InputWithOSK = __webpack_require__(956);\n\n// EXTERNAL MODULE: ./shared/util/styles.ts\nvar styles = __webpack_require__(244);\n\n// EXTERNAL MODULE: ./crave/tv/component/SearchIcon.tsx\nvar SearchIcon = __webpack_require__(590);\n\n// EXTERNAL MODULE: ./ref/tv/component/VirtualKeyboard/VirtualKeyboard.tsx + 4 modules\nvar VirtualKeyboard = __webpack_require__(618);\n\n// EXTERNAL MODULE: ./crave/tv/util/sass.ts\nvar sass = __webpack_require__(246);\n\n// EXTERNAL MODULE: ./crave/tv/page/search/InputWithVK.scss\nvar search_InputWithVK = __webpack_require__(958);\n\n// CONCATENATED MODULE: ./crave/tv/page/search/InputWithVK.tsx\n\n\n\n\n\n\n\n\n\nvar bem = new styles["a" /* Bem */](\'input-with-vk\');\n/**\n * Search input component.\n */\nvar InputWithVK_InputWithVK = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(InputWithVK, _super);\n    function InputWithVK(props) {\n        var _this = _super.call(this, props) || this;\n        _this.setFocus = function (isFocus) {\n            _this.setState({\n                focused: isFocus\n            });\n            if (isFocus) {\n                _this.context.focusNav.analytics.triggerFocusedEvent();\n            }\n            if (!isFocus) {\n                if (_this.props.onCancelSearch) {\n                    _this.props.onCancelSearch();\n                }\n            }\n            return true;\n        };\n        _this.moveLeft = function () {\n            return _this.inputRef && _this.inputRef.moveLeft();\n        };\n        _this.moveRight = function () {\n            return _this.inputRef && _this.inputRef.moveRight();\n        };\n        _this.moveUp = function () {\n            return _this.inputRef && _this.inputRef.moveUp();\n        };\n        _this.moveDown = function () {\n            return _this.inputRef && _this.inputRef.moveDown();\n        };\n        _this.exec = function (act) {\n            return _this.inputRef && _this.inputRef.exec(act);\n        };\n        _this.onRef = function (ref) {\n            _this.ref = ref;\n        };\n        _this.onInputRef = function (ref) {\n            if (ref && ref.focusableRow)\n                _this.inputRef = ref.focusableRow;\n        };\n        _this.onInput = function (val) {\n            var _a = _this.props, onValueChange = _a.onValueChange, value = _a.value;\n            var newValue;\n            if (val === \'DEL\') {\n                if (value.length > 0) {\n                    newValue = value.substr(0, value.length - 1);\n                }\n            }\n            else {\n                newValue = value + val;\n            }\n            if (newValue !== value && onValueChange) {\n                onValueChange(newValue);\n            }\n        };\n        _this.onClick = function () { return _this.context.focusNav.moveToRow(1); };\n        _this.state = {\n            focused: false,\n            curValue: \'\'\n        };\n        _this.focusableRow = {\n            focusable: true,\n            index: 1,\n            height: sass["a" /* default */].searchInputHeight,\n            restoreSavedState: function () { },\n            setFocus: _this.setFocus,\n            moveLeft: _this.moveLeft,\n            moveRight: _this.moveRight,\n            moveUp: _this.moveUp,\n            moveDown: _this.moveDown,\n            exec: _this.exec\n        };\n        return _this;\n    }\n    InputWithVK.prototype.componentDidMount = function () {\n        this.focusableRow.ref = this.ref;\n        this.context.focusNav.registerRow(this.focusableRow);\n    };\n    InputWithVK.prototype.componentWillUnmount = function () {\n        this.context.focusNav.unregisterRow(this.focusableRow);\n    };\n    InputWithVK.prototype.componentDidUpdate = function () {\n        this.focusableRow.savedState = Object.assign({}, this.state);\n    };\n    InputWithVK.prototype.render = function () {\n        var _a = this.props, className = _a.className, value = _a.value, placeholder = _a.placeholder;\n        var focused = this.state.focused;\n        return (react["createElement"]("div", { className: bem.b(\'\', { focused: focused }), ref: this.onRef, onClick: this.onClick, "aria-label": placeholder, role: "presentation" },\n            react["createElement"]("div", { className: classnames_default()(bem.b({ \'has-value\': !!value }), className, \'content-margin\') },\n                react["createElement"]("div", { className: classnames_default()(bem.e(\'background\'), \'full-bleed\') }),\n                react["createElement"]("div", { className: bem.e(\'form\'), role: "search" },\n                    react["createElement"]("div", { "aria-label": "Search", role: "textbox", className: classnames_default()(bem.e(\'input\', value ? \'hasText\' : \'\'), \'full-bleed\') },\n                        react["createElement"]("div", { className: bem.e(\'placeholder\') }, placeholder)),\n                    react["createElement"]("div", { className: bem.e(\'curValue\') },\n                        react["createElement"]("div", { className: bem.e(\'text\') }, value),\n                        react["createElement"]("div", { className: bem.e(\'cursor\', focused ? \'focused\' : \'\') })),\n                    react["createElement"]("div", { className: bem.e(\'icons\') },\n                        react["createElement"](SearchIcon["a" /* default */], { className: bem.e(\'icon\', \'search\') })))),\n            focused ? (react["createElement"]("div", { className: bem.e(\'keyboard\') },\n                react["createElement"](VirtualKeyboard["a" /* default */], { ref: this.onInputRef, handleKeyboardInput: this.onInput }))) : (\'\')));\n    };\n    InputWithVK.contextTypes = {\n        focusNav: prop_types["object"].isRequired\n    };\n    return InputWithVK;\n}(react["PureComponent"]));\n/* harmony default export */ var page_search_InputWithVK = (InputWithVK_InputWithVK);\n\n// CONCATENATED MODULE: ./crave/tv/page/search/SearchInput.tsx\n\n\n\n\n\n\nvar useOSK = ps4DeviceModel["a" /* default */].hasOSK();\n/**\n * Search input component.\n */\nvar SearchInput_SearchInput = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(SearchInput, _super);\n    function SearchInput(props) {\n        return _super.call(this, props) || this;\n    }\n    SearchInput.prototype.render = function () {\n        var intl = this.props.intl;\n        var placeholderId = \'search_input_placeholder\';\n        var placeholder = intl.formatMessage({ id: \'search_input_placeholder\' });\n        if (useOSK) {\n            return react["createElement"](InputWithOSK["a" /* default */], Object(tslib_es6["a" /* __assign */])({}, this.props, { placeholder: "".concat(placeholderId) }));\n        }\n        return react["createElement"](page_search_InputWithVK, Object(tslib_es6["a" /* __assign */])({}, this.props, { placeholder: intl.formatMessage({ id: placeholder }) }));\n    };\n    return SearchInput;\n}(react["PureComponent"]));\n/* harmony default export */ var search_SearchInput = (Object(index_es["d" /* injectIntl */])(SearchInput_SearchInput));\n\n// EXTERNAL MODULE: ../node_modules/react-router/lib/index.js\nvar lib = __webpack_require__(318);\n\n// EXTERNAL MODULE: ./shared/util/reactIntl/index.ts + 3 modules\nvar reactIntl = __webpack_require__(286);\n\n// EXTERNAL MODULE: ./bell/tv/focusableInterface.ts\nvar focusableInterface = __webpack_require__(253);\n\n// EXTERNAL MODULE: ./bell/tv/util/focusUtil.ts\nvar focusUtil = __webpack_require__(249);\n\n// EXTERNAL MODULE: ./ref/tv/util/keycodes.ts\nvar keycodes = __webpack_require__(487);\n\n// EXTERNAL MODULE: ./crave/tv/component/IntlFormatter.tsx\nvar IntlFormatter = __webpack_require__(252);\n\n// EXTERNAL MODULE: ./crave/tv/page/search/RecentSearches.scss\nvar search_RecentSearches = __webpack_require__(959);\n\n// CONCATENATED MODULE: ./crave/tv/page/search/RecentSearches.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar rowIndex = 3;\nvar RecentSearches_bem = new styles["a" /* Bem */](\'recent-searches\');\nvar RecentSearches_RecentSearches = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(RecentSearches, _super);\n    function RecentSearches(props) {\n        var _this = _super.call(this, props) || this;\n        _this.setFocus = function (isFocus) {\n            _this.setState({\n                focused: isFocus\n            });\n            return true;\n        };\n        _this.moveLeft = function () {\n            var focusState = _this.state.focusState;\n            if (focusState === \'clearBtn\') {\n                _this.setState({\n                    focusState: \'list\',\n                    announceListName: true\n                });\n            }\n            return true;\n        };\n        _this.moveRight = function () {\n            var focusState = _this.state.focusState;\n            if (focusState === \'list\') {\n                _this.setState({\n                    focusState: \'clearBtn\'\n                });\n            }\n            return true;\n        };\n        _this.moveUp = function () {\n            var _a = _this.state, focusState = _a.focusState, curIndex = _a.curIndex;\n            if (focusState === \'list\' && curIndex > 0) {\n                _this.setState({\n                    curIndex: curIndex - 1,\n                    announceListName: false\n                });\n                return true;\n            }\n            return false;\n        };\n        _this.moveDown = function () {\n            var _a = _this.state, focusState = _a.focusState, curIndex = _a.curIndex;\n            var searches = _this.props.searches;\n            if (focusState === \'list\' && curIndex < searches.length - 1) {\n                _this.setState({\n                    curIndex: curIndex + 1,\n                    announceListName: false\n                });\n                return true;\n            }\n            if (focusState === \'clearBtn\') {\n                _this.setState({\n                    focusState: \'list\'\n                });\n                return true;\n            }\n            return false;\n        };\n        _this.exec = function (act) {\n            switch (act) {\n                case focusableInterface["a" /* ActionEnum */].CLICK:\n                    var _a = _this.state, focusState = _a.focusState, curIndex = _a.curIndex;\n                    if (focusState === \'clearBtn\') {\n                        _this.onClearSearches();\n                        _this.context.focusNav.move(keycodes["a" /* KEY_CODE */].UP, true);\n                    }\n                    else if (focusState === \'list\') {\n                        var item = _this.props.searches[curIndex];\n                        var location = "".concat(_this.props.searchPagePath, "?q=").concat(encodeURIComponent(item));\n                        _this.context.router.replace(location);\n                    }\n                    return true;\n                case focusableInterface["a" /* ActionEnum */].ESC:\n                    _this.context.focusNav.move(keycodes["a" /* KEY_CODE */].UP, true);\n                    return true;\n                default:\n                    break;\n            }\n            return false;\n        };\n        _this.onClearSearches = function () {\n            _this.props.onClearSearches();\n        };\n        _this.onRef = function (ref) {\n            _this.ref = ref;\n        };\n        _this.handleMouseEnter = function () {\n            !_this.context.focusNav.disableMouseFocus && _this.context.focusNav.moveToRow(rowIndex);\n        };\n        _this.mouseEnterSearchItem = function (index) {\n            _this.setState({ focusState: \'list\', curIndex: index });\n        };\n        _this.clickSearchItem = function () {\n            _this.exec(focusableInterface["a" /* ActionEnum */].CLICK);\n        };\n        _this.mouseEnterClearBtn = function () {\n            _this.setState({ focusState: \'clearBtn\' });\n        };\n        _this.renderSearchItem = function (item, index, array) {\n            var _a = _this.state, focused = _a.focused, focusState = _a.focusState, curIndex = _a.curIndex, announceListName = _a.announceListName;\n            var location = "".concat(_this.props.searchPagePath, "?q=").concat(encodeURIComponent(item));\n            var isFocused = focused && focusState === \'list\' && curIndex === index;\n            return (react["createElement"](RecentSearches_SearchItem, { key: index, index: index, totalItems: array.length, item: item, className: classnames_default()(RecentSearches_bem.e(\'item\'), isFocused ? focusUtil["a" /* focusedClass */] : \'\'), isFocused: isFocused, location: location, containerLabel: announceListName && isFocused ? \'@{search_recent_heading}\' : undefined, onMouseEnter: _this.mouseEnterSearchItem, onClick: _this.clickSearchItem }));\n        };\n        _this.state = {\n            focused: false,\n            focusState: \'list\',\n            announceListName: true,\n            curIndex: 0\n        };\n        _this.focusableRow = {\n            focusable: true,\n            index: 3,\n            height: 1,\n            restoreSavedState: function () { },\n            setFocus: _this.setFocus,\n            moveLeft: _this.moveLeft,\n            moveRight: _this.moveRight,\n            moveUp: _this.moveUp,\n            moveDown: _this.moveDown,\n            exec: _this.exec\n        };\n        return _this;\n    }\n    RecentSearches.prototype.componentDidMount = function () {\n        this.focusableRow.ref = this.ref;\n        this.context.focusNav.registerRow(this.focusableRow);\n    };\n    RecentSearches.prototype.componentWillUnmount = function () {\n        this.context.focusNav.unregisterRow(this.focusableRow);\n    };\n    RecentSearches.prototype.componentDidUpdate = function () {\n        this.focusableRow.savedState = Object.assign({}, this.state);\n        this.focusableRow.height = this.ref && this.ref.clientHeight;\n    };\n    RecentSearches.prototype.render = function () {\n        var searches = this.props.searches;\n        var focused = this.state.focused;\n        return (react["createElement"]("div", { className: RecentSearches_bem.b({ focused: focused }), ref: this.onRef, onMouseEnter: this.handleMouseEnter },\n            react["createElement"]("header", { className: RecentSearches_bem.e(\'header\') },\n                react["createElement"](index_es["a" /* FormattedMessage */], { id: "search_recent_heading" }, function (value) { return react["createElement"]("div", { className: RecentSearches_bem.e(\'heading\') }, value); })),\n            react["createElement"]("div", { className: classnames_default()(RecentSearches_bem.e(\'list\')) }, searches.map(this.renderSearchItem)),\n            this.renderClearButton()));\n    };\n    RecentSearches.prototype.renderClearButton = function () {\n        var _this = this;\n        var _a = this.state, focused = _a.focused, focusState = _a.focusState;\n        return (react["createElement"](index_es["a" /* FormattedMessage */], { id: \'search_recent_clear_label_top\' }, function (value) { return (react["createElement"]("button", { type: "button", onMouseEnter: _this.mouseEnterClearBtn, onClick: _this.onClearSearches, className: classnames_default()(RecentSearches_bem.e(\'clear\'), focused && focusState === \'clearBtn\' ? focusUtil["a" /* focusedClass */] : \'\') }, value)); }));\n    };\n    RecentSearches.contextTypes = {\n        router: prop_types["object"].isRequired,\n        focusNav: prop_types["object"].isRequired\n    };\n    return RecentSearches;\n}(react["Component"]));\n/* harmony default export */ var page_search_RecentSearches = (RecentSearches_RecentSearches);\nvar RecentSearches_SearchItem = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(SearchItem, _super);\n    function SearchItem() {\n        var _this = _super !== null && _super.apply(this, arguments) || this;\n        _this.handleMouseEnter = function () {\n            var _a = _this.props, onMouseEnter = _a.onMouseEnter, index = _a.index;\n            onMouseEnter && onMouseEnter(index);\n        };\n        _this.handleMouseClick = function () {\n            _this.props.onClick && _this.props.onClick();\n        };\n        return _this;\n    }\n    SearchItem.prototype.render = function () {\n        var _a = this.props, className = _a.className, item = _a.item, location = _a.location, isFocused = _a.isFocused, containerLabel = _a.containerLabel;\n        var _b = Object(reactIntl["k" /* getSearchItemAria */])(this.props), label = _b[0], values = _b[1];\n        return (react["createElement"]("div", { className: className, onMouseEnter: this.handleMouseEnter, onClick: this.handleMouseClick },\n            react["createElement"](IntlFormatter["a" /* default */], { tagName: lib["Link"], role: "", to: location, className: classnames_default()(RecentSearches_bem.e(\'link\'), isFocused ? focusUtil["a" /* focusedClass */] : \'\'), formattedAriaLabel: Object(reactIntl["b" /* arrayToLabel */])([containerLabel, label]), values: values }, item)));\n    };\n    return SearchItem;\n}(react["Component"]));\n\n// EXTERNAL MODULE: ./bell/tv/DirectionalNavigation.ts\nvar DirectionalNavigation = __webpack_require__(274);\n\n// EXTERNAL MODULE: ./shared/util/images.ts\nvar util_images = __webpack_require__(257);\n\n// EXTERNAL MODULE: ./bell/tv/util/itemUtils/index.ts + 1 modules\nvar itemUtils = __webpack_require__(248);\n\n// CONCATENATED MODULE: ./crave/tv/pageEntry/search/ResultsMovies.tsx\n\n\n\n\nvar ResultsMovies_ResultsMovies = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(ResultsMovies, _super);\n    function ResultsMovies(props) {\n        var _this = _super.call(this, props) || this;\n        var itemList = _this.props.list;\n        var imageType = itemList && itemList.items && itemList.items.length > 0 && Object(util_images["g" /* getImageTypeForItemList */])(_this.props.list);\n        if (imageType) {\n            _this.row = Object(itemUtils["k" /* getRowDefinitionByItemImageType */])(imageType);\n        }\n        return _this;\n    }\n    ResultsMovies.prototype.render = function () {\n        var Row = this.row;\n        if (Row) {\n            return react["createElement"](Row, Object(tslib_es6["a" /* __assign */])({}, this.props, { maxItems: Infinity }));\n        }\n        else {\n            return react["createElement"]("div", null);\n        }\n    };\n    return ResultsMovies;\n}(react["Component"]));\n/* harmony default export */ var search_ResultsMovies = (ResultsMovies_ResultsMovies);\n\n// CONCATENATED MODULE: ./crave/tv/pageEntry/search/ResultsTv.tsx\n\n\n\nvar ResultsTv_ResultsTv = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(ResultsTv, _super);\n    function ResultsTv(props) {\n        var _this = _super.call(this, props) || this;\n        _this.row = Object(itemUtils["k" /* getRowDefinitionByItemImageType */])(\'poster\');\n        return _this;\n    }\n    ResultsTv.prototype.render = function () {\n        var Row = this.row;\n        if (Row) {\n            return react["createElement"](Row, Object(tslib_es6["a" /* __assign */])({}, this.props, { maxItems: Infinity }));\n        }\n        else {\n            return react["createElement"]("div", null);\n        }\n    };\n    return ResultsTv;\n}(react["Component"]));\n/* harmony default export */ var search_ResultsTv = (ResultsTv_ResultsTv);\n\n// CONCATENATED MODULE: ./crave/tv/page/search/searchEntries.ts\n\n\n/* harmony default export */ var searchEntries = ([search_ResultsMovies, search_ResultsTv]);\n\n// EXTERNAL MODULE: ./bell/tv/component/Spinner.tsx\nvar Spinner = __webpack_require__(313);\n\n// EXTERNAL MODULE: ./shared/page/pageTemplate.ts\nvar pageTemplate = __webpack_require__(266);\n\n// EXTERNAL MODULE: ./shared/page/pageKey.ts\nvar pageKey = __webpack_require__(277);\n\n// EXTERNAL MODULE: ./shared/search/searchWorkflow.ts\nvar searchWorkflow = __webpack_require__(390);\n\n// EXTERNAL MODULE: ./shared/util/search.ts + 1 modules\nvar util_search = __webpack_require__(527);\n\n// EXTERNAL MODULE: ./shared/index.ts + 1 modules\nvar shared = __webpack_require__(289);\n\n// EXTERNAL MODULE: ./crave/tv/page/search/Search.scss\nvar search_Search = __webpack_require__(960);\n\n// CONCATENATED MODULE: ./crave/tv/page/search/Search.tsx\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar Search_id = \'search\';\nvar MIN_SEARCH_CHARACTER_COUNT = 2;\nvar MAX_SEARCH_RESULT_COUNT = 30;\nvar Search_bem = new styles["a" /* Bem */](\'search-page\');\nvar Search_Search = /** @class */ (function (_super) {\n    Object(tslib_es6["c" /* __extends */])(Search, _super);\n    function Search(props) {\n        var _this = _super.call(this, props) || this;\n        _this.shouldRenderEntry = function (entry) {\n            var results = _this.state.results;\n            if (!results)\n                return false;\n            var movies = results.movies, tv = results.tv, people = results.people;\n            switch (entry.template) {\n                case \'results-movies\':\n                    return movies && movies.size > 0;\n                case \'results-tv\':\n                    return tv && tv.size > 0;\n                case \'results-people\':\n                    return people && !!people.length;\n            }\n            return false;\n        };\n        _this.onQueryChange = function (query) {\n            // Remove leading spaces and double spaces within query\n            if (query === undefined) {\n                return;\n            }\n            query = query.replace(/^\\s+/g, \'\').replace(/\\s\\s+/g, \' \');\n            if (query === _this.state.query)\n                return;\n            if (!query.length || query.length < 2)\n                _this.context.focusNav.pageResize();\n            _this.updateQuery(query);\n            // This url query update won\'t trigger a search, we just keep\n            // the query param in sync so if the user refreshes the\n            // browser or wants to share the url they can.\n            var q = query ? "?q=".concat(encodeURIComponent(query)) : \'\';\n            _this.context.router.replace("".concat(_this.props.searchPagePath).concat(q));\n        };\n        _this.onCancelSearch = function () {\n            var query = _this.state.query.trim();\n            var results = _this.props.recentResults;\n            var hasSearchResult = query && results && results.some(function (r) { return r.term === query && r.total > 0; });\n            if (hasSearchResult) {\n                _this.props.searchSave(_this.state.query);\n            }\n        };\n        _this.formatEntryTitles = function (entries) {\n            var formatMessage = _this.props.intl.formatMessage;\n            entries.forEach(function (entry) {\n                switch (entry.template) {\n                    case \'results-movies\':\n                        entry.title = formatMessage({ id: \'search-movie-row-title\' });\n                        break;\n                    case \'results-tv\':\n                        entry.title = formatMessage({ id: \'search-tv-show-row-title\' });\n                        break;\n                }\n            });\n        };\n        _this.state = {\n            query: \'\'\n        };\n        return _this;\n    }\n    Search.prototype.componentDidMount = function () {\n        var _this = this;\n        this.checkRefreshQuery(this.props);\n        this.context.focusNav.addEventHandler(DirectionalNavigation["b" /* GlobalEvent */].KEYBOARD_VISIBILITY_CHANGE, Search_id, function (e) {\n            _this.context.focusNav.disableMouseFocus = e;\n        });\n    };\n    Search.prototype.componentWillUnmount = function () {\n        this.context.focusNav.removeEventHandler(DirectionalNavigation["b" /* GlobalEvent */].KEYBOARD_VISIBILITY_CHANGE, Search_id);\n    };\n    Search.prototype.componentWillReceiveProps = function (newProps) {\n        this.checkRefreshQuery(newProps);\n    };\n    Search.prototype.checkRefreshQuery = function (props) {\n        var location = props.location, customFields = props.customFields, recentResults = props.recentResults;\n        var query = location.query.q || \'\';\n        if (query !== this.state.query || (customFields && customFields[\'refresh\'])) {\n            this.updateQuery(query);\n        }\n        else if (query) {\n            var trimmed_1 = query.trim();\n            var results = recentResults.find(function (r) { return r.term === trimmed_1; });\n            if (results)\n                this.setState({ results: results });\n        }\n        else {\n            this.setState({ results: undefined });\n        }\n    };\n    Search.prototype.updateQuery = function (query) {\n        this.setState({ query: query });\n        // Trigger search when searching for keywords with at least 2 characters or more\n        if (query.length >= MIN_SEARCH_CHARACTER_COUNT) {\n            this.props.onSearch(query, true, MAX_SEARCH_RESULT_COUNT);\n        }\n    };\n    Search.prototype.isErrored = function () {\n        var query = this.state.query.trim();\n        var results = this.state.results;\n        if (results && results.term === query)\n            return false;\n        return !!~this.props.erroredQueries.indexOf(query);\n    };\n    Search.prototype.isLoading = function () {\n        if (this.isErrored())\n            return false;\n        var query = this.state.query.trim();\n        var results = this.props.recentResults;\n        return query && query.length >= MIN_SEARCH_CHARACTER_COUNT && (!results || !results.some(function (r) { return r.term === query; }));\n    };\n    Search.prototype.render = function () {\n        var filtered = (this.props.entries || []).filter(this.shouldRenderEntry);\n        var hasResults = true;\n        if (!filtered.length) {\n            hasResults = false;\n        }\n        return (react["createElement"]("div", { className: classnames_default()(Search_bem.b()) },\n            react["createElement"](search_SearchInput, { onValueChange: this.onQueryChange, onCancelSearch: this.onCancelSearch, autoFocus: true, value: this.state.query, loading: this.isLoading(), hasResults: hasResults }),\n            react["createElement"]("div", { className: classnames_default()(Search_bem.b(\'body\'), \'content-margin\') },\n                " ",\n                this.renderSearchBody(),\n                " ")));\n    };\n    Search.prototype.renderSearchBody = function () {\n        var _a = this.props, entries = _a.entries, renderEntry = _a.renderEntry;\n        if (this.isErrored()) {\n            return this.renderMessage(\'search_error_heading\');\n        }\n        else if (this.state.query.length === 1) {\n            return this.renderMessage(\'search_header_min_character_message\');\n        }\n        else if (this.isLoading()) {\n            return react["createElement"](Spinner["a" /* default */], { className: Search_bem.e(\'spinner\') });\n        }\n        else if (!this.state.query) {\n            return this.renderRecentSearches();\n        }\n        else if (!this.state.results) {\n            return;\n        }\n        var filtered = (entries || []).filter(this.shouldRenderEntry);\n        if (!filtered.length) {\n            return this.renderMessage(\'search_header_empty_message\');\n        }\n        this.formatEntryTitles(entries);\n        return filtered.map(renderEntry);\n    };\n    Search.prototype.renderRecentSearches = function () {\n        var _a = this.props, recentSearches = _a.recentSearches, onSearchClear = _a.onSearchClear;\n        if (!recentSearches.length)\n            return;\n        return (react["createElement"](page_search_RecentSearches, { searches: recentSearches, searchPagePath: this.props.searchPagePath, onClearSearches: onSearchClear }));\n    };\n    Search.prototype.renderMessage = function (id) {\n        return (react["createElement"](index_es["a" /* FormattedMessage */], { id: id }, function (title) { return (react["createElement"]("div", { className: Search_bem.e(\'message\') },\n            react["createElement"]("div", { className: Search_bem.e(\'message-title\') }, title))); }));\n    };\n    Search.contextTypes = {\n        router: prop_types["object"].isRequired,\n        focusNav: prop_types["object"].isRequired\n    };\n    return Search;\n}(react["PureComponent"]));\nfunction mapStateToProps(_a) {\n    var search = _a.search, cache = _a.cache, app = _a.app;\n    return {\n        recentSearches: search.recentSearches,\n        recentResults: cache.search.recentResults,\n        searchPagePath: cache.search.pagePath,\n        erroredQueries: Object(util_search["a" /* getErroredQueries */])(app.erroredActions)\n    };\n}\nfunction mapDispatchToProps(dispatch) {\n    return {\n        onSearch: function (query, group, maxResults) { return dispatch(Object(searchWorkflow["d" /* search */])(query, group, maxResults)); },\n        onSearchClear: function () { return dispatch(Object(searchWorkflow["e" /* searchClear */])()); },\n        searchSave: function (query) { return dispatch(Object(searchWorkflow["f" /* searchSave */])(query)); }\n    };\n}\n/* harmony default export */ var page_search_Search = __webpack_exports__["default"] = (Object(shared["b" /* configPage */])(Object(index_es["d" /* injectIntl */])(Search_Search), {\n    key: pageKey["Search"],\n    template: pageTemplate["STATIC"],\n    mapStateToProps: mapStateToProps,\n    mapDispatchToProps: mapDispatchToProps,\n    entryRenderers: searchEntries\n}));\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///1069\n')},956:function(module,__webpack_exports__,__webpack_require__){"use strict";eval('/* WEBPACK VAR INJECTION */(function(setImmediate) {/* harmony import */ var tslib__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(242);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(243);\n/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_1___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_1__);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(245);\n/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_2__);\n/* harmony import */ var shared_util_styles__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(244);\n/* harmony import */ var shared_util_platforms_keysModel__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(325);\n/* harmony import */ var shared_util_platforms_deviceModel__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(260);\n/* harmony import */ var shared_page_pageKey__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(277);\n/* harmony import */ var bell_tv_component_InputSingleLine__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(490);\n/* harmony import */ var ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(253);\n/* harmony import */ var ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(274);\n/* harmony import */ var ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(248);\n/* harmony import */ var ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(249);\n/* harmony import */ var ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_12__ = __webpack_require__(246);\n/* harmony import */ var _InputWithOSK_scss__WEBPACK_IMPORTED_MODULE_13__ = __webpack_require__(957);\n/* harmony import */ var _InputWithOSK_scss__WEBPACK_IMPORTED_MODULE_13___default = /*#__PURE__*/__webpack_require__.n(_InputWithOSK_scss__WEBPACK_IMPORTED_MODULE_13__);\n\n\n\n\n\n\n\n\n\n\n\n\n\n\nvar maxSearchTermLength = 48;\nvar id = \'input-with-osk\';\nvar bem = new shared_util_styles__WEBPACK_IMPORTED_MODULE_3__[/* Bem */ "a"](id);\nvar InputWithOSK = /** @class */ (function (_super) {\n    Object(tslib__WEBPACK_IMPORTED_MODULE_0__[/* __extends */ "c"])(InputWithOSK, _super);\n    function InputWithOSK(props) {\n        var _this = _super.call(this, props) || this;\n        _this.setFocus = function (isFocus) {\n            // When going back to search page input is focused first, asset second\n            if (_this.isGoingBackToSearch())\n                return;\n            _this.setState({\n                focused: isFocus\n            });\n            if (isFocus) {\n                if (shared_util_platforms_deviceModel__WEBPACK_IMPORTED_MODULE_5__[/* default */ "a"].noAutoPopUpKeyboard) {\n                    // Normally the keyboard shows right when the HTML input is focused even without pressing any keys,\n                    // so we do not need to set to show the OSK when we focus the UI input as the real HTML input will get\n                    // focussed with first Enter click.\n                    // However some platforms require additional keypress when already focussed to show the keyboard.\n                    // For those we focus the HTML input immediately as we focus the UI one to get the keyboard on next\n                    // Enter click.\n                    _this.setState({ showOSK: true });\n                }\n                _this.context.focusNav.analytics.triggerFocusedEvent();\n            }\n            else {\n                _this.setState({ showOSK: false });\n                if (_this.props.onCancelSearch) {\n                    _this.props.onCancelSearch();\n                }\n            }\n            return true;\n        };\n        _this.moveLeft = function () {\n            return true;\n        };\n        _this.moveRight = function () {\n            return true;\n        };\n        _this.moveUp = function () {\n            return false;\n        };\n        _this.moveDown = function () {\n            return false;\n        };\n        _this.exec = function (act) {\n            if (act === ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_8__[/* ActionEnum */ "a"].CLICK) {\n                setImmediate(function () {\n                    _this.setState({ showOSK: true });\n                });\n            }\n            else if (act === ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_8__[/* ActionEnum */ "a"].ESC) {\n                _this.context.focusNav.moveToRow(0);\n            }\n            else if (act === ref_tv_focusableInterface__WEBPACK_IMPORTED_MODULE_8__[/* ActionEnum */ "a"].EXIT) {\n                _this.setState({ showOSK: false });\n                _this.context.focusNav.moveToRow(0);\n                return false;\n            }\n            return Object(ref_tv_util_focusUtil__WEBPACK_IMPORTED_MODULE_11__[/* stopExec */ "d"])(act);\n        };\n        _this.onValueChanged = function (value) {\n            var onValueChange = _this.props.onValueChange;\n            var v = value.trim();\n            if (v.length > maxSearchTermLength)\n                return;\n            _this.curValue = v;\n            _this.setState({ curValue: v });\n            onValueChange && onValueChange(v);\n        };\n        _this.focusOnFirstResult = function () {\n            setImmediate(function () {\n                Object(ref_tv_util_itemUtils__WEBPACK_IMPORTED_MODULE_10__[/* waitUntil */ "H"])(function () {\n                    return !_this.props.loading;\n                }, function () {\n                    if (_this.props.hasResults) {\n                        _this.setState({ showOSK: false });\n                        _this.context.focusNav.move(shared_util_platforms_keysModel__WEBPACK_IMPORTED_MODULE_4__[/* default */ "a"].Down, true);\n                    }\n                });\n            });\n        };\n        _this.onClick = function () { return _this.context.focusNav.moveToRow(1); };\n        _this.onBack = function () {\n            if (_this.state.showOSK) {\n                _this.setState({ showOSK: false });\n            }\n            else {\n                _this.context.focusNav.handleEsc();\n            }\n        };\n        _this.onDone = function () {\n            _this.props.onValueChange(_this.curValue);\n            _this.setState({ showOSK: false });\n            _this.focusOnFirstResult();\n        };\n        _this.state = {\n            focused: false,\n            curValue: props.value,\n            showOSK: false\n        };\n        _this.focusableRow = {\n            focusable: true,\n            index: 1,\n            height: ref_tv_util_sass__WEBPACK_IMPORTED_MODULE_12__[/* default */ "a"].searchInputHeight,\n            restoreSavedState: function () { },\n            setFocus: _this.setFocus,\n            moveLeft: _this.moveLeft,\n            moveRight: _this.moveRight,\n            moveUp: _this.moveUp,\n            moveDown: _this.moveDown,\n            exec: _this.exec\n        };\n        return _this;\n    }\n    InputWithOSK.prototype.componentDidMount = function () {\n        var _this = this;\n        this.focusableRow.ref = this.ref;\n        this.context.focusNav.registerRow(this.focusableRow);\n        this.context.focusNav.addEventHandler(ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_9__[/* GlobalEvent */ "b"].KEYBOARD_VISIBILITY_CHANGE, id, function (e) {\n            _this.context.focusNav.disableMouseFocus = e;\n            _this.setState({ showOSK: e });\n        });\n    };\n    InputWithOSK.prototype.componentWillUnmount = function () {\n        this.context.focusNav.unregisterRow(this.focusableRow);\n        this.context.focusNav.removeEventHandler(ref_tv_DirectionalNavigation__WEBPACK_IMPORTED_MODULE_9__[/* GlobalEvent */ "b"].KEYBOARD_VISIBILITY_CHANGE, id);\n    };\n    InputWithOSK.prototype.componentWillReceiveProps = function (nextProps) {\n        if (this.state.curValue !== nextProps.value) {\n            this.setState({ curValue: nextProps.value });\n        }\n    };\n    InputWithOSK.prototype.componentDidUpdate = function () {\n        this.focusableRow.savedState = Object.assign({}, this.state);\n    };\n    InputWithOSK.prototype.render = function () {\n        var _this = this;\n        var placeholder = this.props.placeholder;\n        var _a = this.state, focused = _a.focused, curValue = _a.curValue;\n        return (react__WEBPACK_IMPORTED_MODULE_1__["createElement"]("div", { className: bem.b({ focused: focused }), ref: function (ref) { return (_this.ref = ref); }, onClick: this.onClick },\n            react__WEBPACK_IMPORTED_MODULE_1__["createElement"](bell_tv_component_InputSingleLine__WEBPACK_IMPORTED_MODULE_7__[/* default */ "a"], { useOSK: true, focused: focused, value: curValue, maxLength: maxSearchTermLength, placeholder: placeholder, className: bem.e(\'search-osk\'), valueChanged: this.onValueChanged, onBack: this.onBack, onDone: this.onDone })));\n    };\n    InputWithOSK.prototype.isGoingBackToSearch = function () {\n        var _a = this.context.focusNav, curPageTemplate = _a.curPageTemplate, isGoingBack = _a.isGoingBack;\n        return curPageTemplate === shared_page_pageKey__WEBPACK_IMPORTED_MODULE_6__["Search"] && isGoingBack;\n    };\n    InputWithOSK.contextTypes = {\n        focusNav: prop_types__WEBPACK_IMPORTED_MODULE_2__["object"].isRequired\n    };\n    return InputWithOSK;\n}(react__WEBPACK_IMPORTED_MODULE_1__["Component"]));\n/* harmony default export */ __webpack_exports__["a"] = (InputWithOSK);\n\n/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(294).setImmediate))//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///956\n')},957:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jcmF2ZS90di9wYWdlL3NlYXJjaC9JbnB1dFdpdGhPU0suc2Nzcz9mZjI0Il0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijk1Ny5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///957\n")},958:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jcmF2ZS90di9wYWdlL3NlYXJjaC9JbnB1dFdpdGhWSy5zY3NzPzc2MTMiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOTU4LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///958\n")},959:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jcmF2ZS90di9wYWdlL3NlYXJjaC9SZWNlbnRTZWFyY2hlcy5zY3NzPzlmNGIiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUEiLCJmaWxlIjoiOTU5LmpzIiwic291cmNlc0NvbnRlbnQiOlsiLy8gZXh0cmFjdGVkIGJ5IG1pbmktY3NzLWV4dHJhY3QtcGx1Z2luIl0sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///959\n")},960:function(module,exports,__webpack_require__){eval("// extracted by mini-css-extract-plugin//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9jcmF2ZS90di9wYWdlL3NlYXJjaC9TZWFyY2guc2Nzcz9kNmNlIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBIiwiZmlsZSI6Ijk2MC5qcyIsInNvdXJjZXNDb250ZW50IjpbIi8vIGV4dHJhY3RlZCBieSBtaW5pLWNzcy1leHRyYWN0LXBsdWdpbiJdLCJzb3VyY2VSb290IjoiIn0=\n//# sourceURL=webpack-internal:///960\n")}}]);